{"00_Home/Author_Profile":{"slug":"00_Home/Author_Profile","filePath":"00_Home/Author_Profile.md","title":"Author_Profile","links":["00_Home/INDEX","00_Home/Project_Dashboard"],"tags":["author","profile","social","contact"],"content":"Author Profile\nPrabhakar Deep Tirkey\n\nResearch Associate (RA, probation) at DeSCINED Lab, Department of Design, IIT Delhi\n\nüéØ Current Focus\n\nVR Coal Mining Training Simulator project continuation and completion\n3-month honorary probation ‚Üí proving consistency, reliability, and delivery capability\nPublic learning journey ‚Üí livestreaming and devlogging XR development process\nExperience design approach ‚Üí treating VR as immersive experience design (not just coding)\n\nüßë‚Äçüéì Background\n\nB.Tech in IT &amp; Mathematics Innovation (University of Delhi)\nM.Sc in Cognitive Science (IIT Delhi)\nResearch Experience in Game Design, VR/AR, AI/Automation, EEG/BCI\n\nüõ†Ô∏è Skills &amp; Expertise\n\nGame Engines: Unity (XR Interaction Toolkit), Unreal VR template\nProgramming: C#, Python, ML/AI integration\nDesign: User experience, interaction design, creative prototyping\nResearch: Cognitive science, memory, attention, learning under stress\nSpecialization: VR/AR, automation (n8n), branding, digital art\n\nüß© Philosophy\n\n‚ÄúVR = creating immersive experiences, not just coding mechanics‚Äù\n\n\nBlends design science + innovation + education ‚Üí aligned with DeSCINED lab‚Äôs mission\nUses build-in-public approach (livestreams, devlogs) for accountability and visibility\nConsiders learning + delivering as one unified process (learn by building features)\n\nüì± Connect With Me\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPlatformLinkPurposeEmailthatguypdeep@gmail.comProfessional inquiries, collaborationLinkedIn@prabhakar-deepProfessional network, career updatesYouTube@prabhakardeepDevlogs, livestreams, XR tutorialsGitHub@thatGuyPdeepCode repositories, open source projectsTwitter/X@thatGuyPdeepQuick updates, tech discussions\nüé• Content Strategy\n\nWeekly livestreams ‚Üí ‚ÄúLearning XR in Public‚Äù (60‚Äì90 min)\nUnity/Unreal setup ‚Üí debugging, building immersive interactions\nRoadmap progress ‚Üí sharing without exposing lab code\nShort clips ‚Üí 30‚Äì60 sec for YouTube Shorts/Instagram\n\nüöÄ Long-Term Vision\n\nBuild portfolio in VR, AI, and immersive design\nCreate educational &amp; safety simulations with real-world impact\nStrengthen public persona as a VR/AI creator &amp; educator\nSecure stability through RA role, fellowships, freelancing while building creative legacy\n\n\nQuick Stats\npie title Current Project Focus\r\n    &quot;VR Development&quot; : 40\r\n    &quot;Research &amp; Documentation&quot; : 25\r\n    &quot;Public Content Creation&quot; : 20\r\n    &quot;Learning &amp; Skill Building&quot; : 15\n\n\nBacklinks: Home Index, Project Dashboard"},"00_Home/Graph_Overview":{"slug":"00_Home/Graph_Overview","filePath":"00_Home/Graph_Overview.md","title":"Graph_Overview","links":[],"tags":["graph"],"content":"Graph Overview ‚Äî VR Mines\nNetwork (Concept Map)\ngraph TD\n  GDD --&gt; Backlog\n  Backlog --&gt; Features\n  Features --&gt; Drill\n  Features --&gt; Safety\n  Features --&gt; Vehicles\n  Backlog --&gt; Roadmap\n  Roadmap --&gt; Daily\n  Research --&gt; Features\n  Research --&gt; UX\n\nMindmap (Modules)\nmindmap\n  root((VR Mines))\n    Controls &amp; PPE\n    Drilling\n      L1 Basics\n      L2 Coolant\n      L3 Hazards\n    Water Logging\n    Vehicles\n    Blasting Prep\n    Material Handling\n\nPie ‚Äî Effort Allocation\npie title Focus Split\n  &quot;Drill ECS&quot; : 40\n  &quot;Safety/Hazards&quot; : 25\n  &quot;Vehicles&quot; : 20\n  &quot;Research&quot; : 15\n\n\n\n                  \n                  Use Graph Settings \n                  \n                \n\n\n\nGroup by: Path\nShow tags; filter #project/vr-mines\n\n\n\n"},"00_Home/INDEX":{"slug":"00_Home/INDEX","filePath":"00_Home/INDEX.md","title":"INDEX","links":["00_Home/Author_Profile","Project_Directory_Index","70_Project_Documentation/XR_to_DOTS_Bridge_Plan","90_Roadmap_Updates/90_Day_Master_Plan","70_Project_Documentation/GDD/VR_Mines_GDD","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","00_Home/Project_Dashboard","00_Home/Graph_Overview","70_Project_Documentation/User_Flow_Storyline","70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX","80_Research_Notes/INDEX","70_Project_Documentation/Code_Templates/INDEX","70_Project_Documentation/Code_Templates/README","70_Project_Documentation/Unity_2023_Quest3_DOTS_Setup","70_Project_Documentation/Quest3_Perf_Profiling_Checklist","70_Project_Documentation/Instructor_Guide_Template","40_Daily/README","40_Daily/Weekly/","40_Daily/Progress_Tracker","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes","70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","70_Project_Documentation/DOTS_Migration_Plan","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","00_Home/MOC_VR_Mines","00_Home/Tag_Taxonomy_and_Linking","00_Home/Periodic_Notes_Setup","Publish/README","tags/home","tags/","tags/xr","tags/unity","tags/quest3","tags/author","tags/social"],"tags":["home","index","xr","unity","quest3","author","social"],"content":"Home Index\n\nVR Mines Second Brain ‚Äî Obsidian vault for VR Coal Mining Training Simulator project\nAuthor: Prabhakar Deep Tirkey | Project: DeSCINED Lab, IIT Delhi\n\nQuick Links\n\nProject Directory Index\nUnity XR ‚Üí DOTS Bridge Plan\n90-Day Build Plan + Post-90 Polish\nGDD ‚Äî VR Mines: SafeOps\nRoadmap ‚Äî Week 1\nProject Dashboard\nGraph Overview\nUser Flow + Storyline\nSimulator Index\nResearch Index\nTemplates Index\nECS)\nUnity 2023 Quest 3 + DOTS Setup\nQuest 3 Perf &amp; Profiling Checklist\nInstructor Guide &amp; Scenario Template\nDaily Logs\nWeekly Notes\nProgress Tracker\nVR Simulator Backlog\nBacklog Kanban\nMeeting Minutes ‚Äî 2025-09-11\nFeature ‚Äî Drill System (DOTS)\nDOTS Migration Plan\nResearch ‚Äî VR Immersion Factors\nMOC ‚Äî VR Mines\nTag Taxonomy &amp; Linking\nPeriodic Notes Setup\nPublish ‚Äî Public Notes\nAuthor Profile &amp; Social Links\n\nüåê Live Site\n\nPublic Website: https://thatGuyPdeep.github.io/quartz/\nGitHub Repository: github.com/thatGuyPdeep/quartz\n\nüì± Connect\n\nEmail: thatguypdeep@gmail.com\nLinkedIn: @prabhakar-deep\nYouTube: @prabhakardeep\nGitHub: @thatGuyPdeep\n\n\nTags: home index xr unity quest3 author social"},"00_Home/MOC_Concepts":{"slug":"00_Home/MOC_Concepts","filePath":"00_Home/MOC_Concepts.md","title":"MOC_Concepts","links":["01_Environment_Setup","02_Beginner_Projects","05_Deployment_Guide","04_Advanced_Projects","tags/moc","tags/concepts","tags/xr"],"tags":["moc","concepts","xr"],"content":"MOC: Concepts\nXR Fundamentals\n\nInput: XR Input &amp; XR Origin\nLocomotion: Teleportation &amp; Smooth Move\nInteractions: Grabbing &amp; Hand Tracking\nPhysics: XR Physics\nSpatial Audio: Audio in XR\n\nPerformance &amp; Deployment\n\nOptimization: Quest 3 Optimization\nBuild: Build &amp; Install\n\nAI &amp; Advanced Topics\n\nAI Companions: Conversational AI\nProcedural Worlds: Procedural Generation\nMultiplayer: Networking in VR\n\nTags: moc concepts xr"},"00_Home/MOC_Projects":{"slug":"00_Home/MOC_Projects","filePath":"00_Home/MOC_Projects.md","title":"MOC_Projects","links":["02_Beginner_Projects","03_Intermediate_Projects","04_Advanced_Projects","tags/moc","tags/projects","tags/xr","tags/unity"],"tags":["moc","projects","xr","unity"],"content":"MOC: Projects\nBeginner Projects\n\nHello XR\nVR Gallery\nPhysics Playground\nAudio Experience\n\nIntermediate Projects\n\nVR Workshop\nPuzzle Room\nMusic Visualizer\nMini-Game Collection\n\nAdvanced Projects\n\nAI Companion\nProcedural World\nMultiplayer Social\nEducational Experience\n\nTags: moc projects xr unity"},"00_Home/MOC_Tutorials":{"slug":"00_Home/MOC_Tutorials","filePath":"00_Home/MOC_Tutorials.md","title":"MOC_Tutorials","links":["XR_Learning_Roadmap","02_Beginner_Projects","03_Intermediate_Projects","04_Advanced_Projects","tags/moc","tags/tutorials","tags/learning"],"tags":["moc","tutorials","learning"],"content":"MOC: Tutorials &amp; Courses\nOfficial Docs\n\nUnity XR Toolkit Docs\nMeta Quest Developer Hub\n\nTutorials to Follow\n\nBeginner Projects Walkthroughs\nIntermediate Projects Walkthroughs\nAdvanced Projects Walkthroughs\n\nTags: moc tutorials learning"},"00_Home/MOC_VR_Mines":{"slug":"00_Home/MOC_VR_Mines","filePath":"00_Home/MOC_VR_Mines.md","title":"MOC_VR_Mines","links":["70_Project_Documentation/GDD/VR_Mines_GDD","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/DOTS_Migration_Plan","70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes","80_Research_Notes/Coal_Mining_Workflow_and_Machines","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","40_Daily/README"],"tags":["project/vr-mines","moc"],"content":"MOC ‚Äî VR Mines (Training Simulator)\nKey Hubs\n\nGDD ‚Äî VR Mines: SafeOps\nBacklog\nDOTS Migration Plan\nFeature: Drill System (DOTS)\nMeeting Minutes 2025-09-11\nResearch: Workflow &amp; Machines\nResearch: VR Immersion Factors\nRoadmap Update ‚Äî Week 1\nDaily Logs\n\nProject Graph\ngraph TD\n  GDD[[GDD]] --&gt; Backlog\n  GDD --&gt; DOTS\n  DOTS --&gt; Feature\n  Backlog --&gt; Roadmap\n  Roadmap --&gt; Daily\n  GDD --&gt; Research\n\nCurrent Focus\n\nQuest 3 performance ‚Üí ECS conversion for drill, carts, scoring\n\nQuick Filters (use in Obsidian Graph)\n\nTag filter: #project/vr-mines\nPath filter: 70_Project_Documentation/VR_Coal_Mining_Simulator/\n"},"00_Home/Periodic_Notes_Setup":{"slug":"00_Home/Periodic_Notes_Setup","filePath":"00_Home/Periodic_Notes_Setup.md","title":"Periodic_Notes_Setup","links":["00_Home/MOC_VR_Mines"],"tags":[],"content":"Periodic Notes Setup\nPlugins to enable\n\nCalendar\nPeriodic Notes\nTemplates\n\nFolders\n\nDaily: 40_Daily/\nWeekly: 40_Daily/Weekly/\n\nTemplates\n\nDaily template: 30_Templates/Daily.md\nWeekly template: 30_Templates/Weekly.md\n\nSuggested settings\n\nDaily note format: YYYY-MM-DD\nWeekly note format: gggg-[W]ww\nOpen daily on startup: enabled\n\nAutomation\n\nUse Calendar to create notes; they‚Äôll auto-link to this project‚Äôs MOC\n\nLinks\n\nMOC ‚Äî VR Mines\n"},"00_Home/Project_Dashboard":{"slug":"00_Home/Project_Dashboard","filePath":"00_Home/Project_Dashboard.md","title":"Project_Dashboard","links":["INDEX","00_Home/MOC_VR_Mines","70_Project_Documentation/GDD/VR_Mines_GDD","70_Project_Documentation/DOTS_Migration_Plan","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog"],"tags":["dashboard"],"content":"VR Mines ‚Äî Project Dashboard\n\n\n                  \n                  Quick Entry Points \n                  \n                \n\n\nHome Index ‚Ä¢ MOC ‚Ä¢ GDD ‚Ä¢ DOTS Plan ‚Ä¢ Kanban\n\n\n\nStatus Summary\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAreaStatusOwnerNotesDrill (DOTS)In ProgressPDTInput/Motion systems prototypedDOTS PlanActivePDTScope defined, week 2 targetsRoadmap W1CompletedPDTNext: ECS Physics weekResearchOngoingPDTImmersion + mining workflow\nMilestone Flow\ngraph LR\n  W1[Week 1: Foundation] --&gt; W2[Week 2: ECS Physics]\n  W2 --&gt; W3[Week 3: Extraction + Cart]\n  W3 --&gt; W4[Week 4: Safety Integration]\n  W4 --&gt; R[Release Candidate @ Day 90]\n  R --&gt; P[Post-90 Polish]\n\nComponent Map\ngraph TD\n  XR --&gt; Input\n  Input --&gt; Motion\n  Motion --&gt; Collision\n  Collision --&gt; Feedback\n  Collision --&gt; Scoring\n  Scoring --&gt; Telemetry\n\n\n\n                  \n                  Graph View \n                  \n                \n\n\nFilter by tag #project/vr-mines for a clean project-only network.\n\n\n\nKey Documents\n\nGDD ‚Äî SafeOps\nDrill System (DOTS)\nDOTS Migration Plan\nRoadmap W1\nBacklog\n\nWorkload Split\npie title Work Focus (Week 1)\n  &quot;ECS Drill&quot; : 40\n  &quot;Docs &amp; Planning&quot; : 25\n  &quot;Research&quot; : 20\n  &quot;Content/Devlog&quot; : 15\n"},"00_Home/Resources_Index":{"slug":"00_Home/Resources_Index","filePath":"00_Home/Resources_Index.md","title":"Resources_Index","links":["Project_Structure","05_Deployment_Guide","XR_Learning_Roadmap","tags/resources","tags/"],"tags":["resources","index"],"content":"Resources Index\n\nProject Structure &amp; Workflow\nQuest 3 Deployment &amp; Optimization\nLearning Roadmap\n\nExternal Links (paste as needed)\n\nUnity Learn XR Pathway\nMeta Quest Developer Hub\nXR Interaction Toolkit Samples\n\nTags: resources index"},"00_Home/Tag_Taxonomy_and_Linking":{"slug":"00_Home/Tag_Taxonomy_and_Linking","filePath":"00_Home/Tag_Taxonomy_and_Linking.md","title":"Tag_Taxonomy_and_Linking","links":["00_Home/MOC_VR_Mines","70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX","80_Research_Notes/INDEX","70_Project_Documentation/Code_Templates/INDEX"],"tags":[],"content":"Tag Taxonomy &amp; Linking Conventions\nTags\n\n#project/vr-mines ‚Äî global project tag\n#feature/* ‚Äî feature notes (e.g., #feature/drill)\n#plan/* ‚Äî planning notes (e.g., #plan/dots)\n#research/* ‚Äî research notes\n#meeting ‚Äî meeting minutes\n#template ‚Äî templates\n\nConventions\n\nPrefer Obsidian wiki-links with human labels: [[path|Readable Title]]\nEach feature note links to: Backlog item, DOTS Plan, relevant templates, research\nEach daily note links to: current Week note and the Backlog card moved\n\nStart Here\n\nMOC ‚Äî VR Mines\nSimulator Index\nResearch Index\nTemplates Index\n"},"01_Environment_Setup":{"slug":"01_Environment_Setup","filePath":"01_Environment_Setup.md","title":"01_Environment_Setup","links":[],"tags":[],"content":""},"02_Beginner_Projects":{"slug":"02_Beginner_Projects","filePath":"02_Beginner_Projects.md","title":"02_Beginner_Projects","links":[],"tags":[],"content":""},"03_Intermediate_Projects":{"slug":"03_Intermediate_Projects","filePath":"03_Intermediate_Projects.md","title":"03_Intermediate_Projects","links":[],"tags":[],"content":""},"04_Advanced_Projects":{"slug":"04_Advanced_Projects","filePath":"04_Advanced_Projects.md","title":"04_Advanced_Projects","links":[],"tags":[],"content":""},"05_Deployment_Guide":{"slug":"05_Deployment_Guide","filePath":"05_Deployment_Guide.md","title":"05_Deployment_Guide","links":[],"tags":[],"content":"Meta Quest 3 Deployment Guide\nPre-Deployment Checklist\nPerformance Optimization\n\n Frame Rate: Maintain 72 FPS consistently\n Memory Usage: Keep under 4GB RAM\n Draw Calls: Minimize to &lt; 100 per frame\n Texture Size: Optimize for mobile GPU\n Polygon Count: Keep scenes under 100k triangles\n\nVR Comfort Guidelines\n\n Locomotion: Provide multiple movement options\n Snap Turning: Implement for comfort\n UI Distance: Position UI 1-2 meters away\n Motion Sickness: Avoid rapid movements\n Audio: Use spatial audio appropriately\n\nBuild Configuration\nUnity Build Settings\n// Build Configuration Script\npublic class BuildConfiguration : MonoBehaviour\n{\n    [Header(&quot;Build Settings&quot;)]\n    public string productName = &quot;Your VR App&quot;;\n    public string packageName = &quot;com.yourcompany.yourapp&quot;;\n    public string version = &quot;1.0.0&quot;;\n    \n    [Header(&quot;Quest 3 Optimization&quot;)]\n    public bool enableFoveatedRendering = true;\n    public bool enableDynamicResolution = true;\n    public int targetFrameRate = 72;\n    \n    void ConfigureBuildSettings()\n    {\n        // Configure Player Settings\n        PlayerSettings.productName = productName;\n        PlayerSettings.bundleIdentifier = packageName;\n        PlayerSettings.bundleVersion = version;\n        \n        // Android Settings\n        PlayerSettings.Android.minSdkVersion = AndroidSdkVersions.AndroidApiLevel24;\n        PlayerSettings.Android.targetSdkVersion = AndroidSdkVersions.AndroidApiLevel34;\n        PlayerSettings.Android.targetArchitectures = AndroidArchitecture.ARM64;\n        \n        // Graphics Settings\n        PlayerSettings.SetGraphicsAPIs(BuildTarget.Android, new GraphicsDeviceType[] \n        { \n            GraphicsDeviceType.Vulkan \n        });\n    }\n}\nQuest 3 Specific Settings\n\n\nPlayer Settings ‚Üí Android:\n\nScripting Backend: IL2CPP\nTarget Architectures: ARM64\nGraphics APIs: Vulkan\nMinimum API Level: Android 7.0 (API 24)\nTarget API Level: Android 14 (API 34)\n\n\n\nXR Settings:\n\nInitialize XR on Startup: ‚úÖ\nMeta Quest Support: ‚úÖ\nHand Tracking: ‚úÖ (if using)\n\n\n\nQuality Settings:\n\nQuality Level: Medium (for Quest 3)\nTexture Quality: Half Res\nAnisotropic Textures: Disabled\nAnti Aliasing: 2x Multi Sampling\n\n\n\nBuild Process\nStep 1: Pre-Build Optimization\n// Build Optimization Script\npublic class BuildOptimizer : MonoBehaviour\n{\n    public void OptimizeForQuest3()\n    {\n        // Optimize textures\n        OptimizeTextures();\n        \n        // Reduce polygon count\n        OptimizeMeshes();\n        \n        // Compress audio\n        OptimizeAudio();\n        \n        // Remove unused assets\n        RemoveUnusedAssets();\n    }\n    \n    void OptimizeTextures()\n    {\n        // Set texture compression to ASTC\n        // Reduce texture sizes\n        // Use texture atlasing\n    }\n    \n    void OptimizeMeshes()\n    {\n        // Enable mesh compression\n        // Use LOD groups\n        // Optimize polygon count\n    }\n}\nStep 2: Build Configuration\n\nFile ‚Üí Build Settings\nPlatform: Android\nScenes: Add all scenes to build\nPlayer Settings: Configure as above\nBuild: Create APK file\n\nStep 3: APK Installation\n# Install APK on Quest 3\nadb install -r YourApp.apk\n \n# Or use SideQuest for easier installation\n# 1. Install SideQuest on PC\n# 2. Connect Quest 3 via USB\n# 3. Drag APK to SideQuest\n# 4. Install on device\nTesting and Debugging\nPerformance Testing\n// Performance Monitor\npublic class Quest3PerformanceMonitor : MonoBehaviour\n{\n    public float targetFrameTime = 1f / 72f; // 72 FPS\n    public float performanceWarningThreshold = 0.9f;\n    \n    void Update()\n    {\n        MonitorPerformance();\n        LogPerformanceData();\n    }\n    \n    void MonitorPerformance()\n    {\n        float currentFrameTime = Time.deltaTime;\n        float performanceRatio = currentFrameTime / targetFrameTime;\n        \n        if (performanceRatio &gt; performanceWarningThreshold)\n        {\n            Debug.LogWarning($&quot;Performance Warning: {performanceRatio:P}&quot;);\n        }\n    }\n}\nDebug Tools\n\n\nOculus Performance HUD:\n\nEnable in Quest 3 settings\nShows FPS, CPU/GPU usage\nMemory consumption\n\n\n\nUnity Profiler:\n\nConnect to Quest 3 via WiFi\nMonitor real-time performance\nIdentify bottlenecks\n\n\n\nADB Logcat:\nadb logcat -s Unity\n\n\nComfort Testing\n\nSession Length: Test 30+ minute sessions\nMovement: Test all locomotion methods\nUI Interaction: Verify comfortable UI usage\nAudio: Test spatial audio positioning\n\nPublishing Options\nMeta Quest Store\nRequirements:\n\nComplete Meta Developer account\nApp review process (2-4 weeks)\nQuality standards compliance\nRevenue sharing (30% to Meta)\n\nSubmission Process:\n\nCreate Meta Developer account\nSubmit app for review\nProvide store assets (screenshots, videos)\nComplete store listing\nWait for approval\n\nApp Lab\nRequirements:\n\nLighter review process\nDiscoverable through search\nNo revenue sharing\nGood for testing/early access\n\nSubmission Process:\n\nCreate Meta Developer account\nSubmit to App Lab\nProvide basic store assets\nWait for approval (1-2 weeks)\n\nSideQuest\nRequirements:\n\nNo review process\nDirect APK installation\nGood for development/testing\nCommunity-driven discovery\n\nUpload Process:\n\nCreate SideQuest account\nUpload APK file\nAdd description and screenshots\nPublish immediately\n\nOptimization Techniques\nRendering Optimization\n// Quest 3 Rendering Optimizer\npublic class Quest3Renderer : MonoBehaviour\n{\n    [Header(&quot;Foveated Rendering&quot;)]\n    public bool enableFoveatedRendering = true;\n    public float foveationLevel = 0.5f;\n    \n    [Header(&quot;Dynamic Resolution&quot;)]\n    public bool enableDynamicResolution = true;\n    public float minResolutionScale = 0.7f;\n    public float maxResolutionScale = 1.0f;\n    \n    void Start()\n    {\n        ConfigureRendering();\n    }\n    \n    void ConfigureRendering()\n    {\n        if (enableFoveatedRendering)\n        {\n            // Configure foveated rendering\n            OVRManager.instance.fixedFoveatedRenderingLevel = \n                OVRManager.FixedFoveatedRenderingLevel.Medium;\n        }\n        \n        if (enableDynamicResolution)\n        {\n            // Configure dynamic resolution\n            OVRManager.instance.enableDynamicResolution = true;\n        }\n    }\n}\nMemory Optimization\n// Memory Manager\npublic class Quest3MemoryManager : MonoBehaviour\n{\n    public int maxMemoryUsage = 3500; // MB\n    public float memoryCheckInterval = 1f;\n    \n    void Start()\n    {\n        InvokeRepeating(nameof(CheckMemoryUsage), 0f, memoryCheckInterval);\n    }\n    \n    void CheckMemoryUsage()\n    {\n        long memoryUsage = System.GC.GetTotalMemory(false) / (1024 * 1024);\n        \n        if (memoryUsage &gt; maxMemoryUsage)\n        {\n            TriggerMemoryCleanup();\n        }\n    }\n    \n    void TriggerMemoryCleanup()\n    {\n        // Unload unused assets\n        Resources.UnloadUnusedAssets();\n        \n        // Force garbage collection\n        System.GC.Collect();\n    }\n}\nAudio Optimization\n// Audio Optimizer\npublic class Quest3AudioOptimizer : MonoBehaviour\n{\n    [Header(&quot;Audio Settings&quot;)]\n    public int maxAudioSources = 32;\n    public float audioLODDistance = 50f;\n    \n    void Start()\n    {\n        ConfigureAudio();\n    }\n    \n    void ConfigureAudio()\n    {\n        // Set audio quality for Quest 3\n        AudioSettings.outputSampleRate = 48000;\n        AudioSettings.SetDSPBufferSize(256, 4);\n        \n        // Configure spatial audio\n        AudioSettings.spatializerPlugin = &quot;OculusSpatializer&quot;;\n    }\n}\nTroubleshooting\nCommon Build Issues\n\n\nBuild Fails:\n\nCheck Android SDK installation\nVerify Java JDK setup\nClear Unity cache\n\n\n\nAPK Won‚Äôt Install:\n\nCheck package name format\nVerify signing configuration\nEnsure Quest 3 has enough storage\n\n\n\nPerformance Issues:\n\nUse Unity Profiler\nCheck draw calls\nOptimize textures and meshes\n\n\n\nRuntime Issues\n\n\nApp Crashes:\n\nCheck ADB logcat\nVerify memory usage\nTest on different Quest 3 devices\n\n\n\nPoor Performance:\n\nEnable Oculus Performance HUD\nReduce quality settings\nOptimize rendering pipeline\n\n\n\nHand Tracking Issues:\n\nCheck hand tracking permissions\nVerify lighting conditions\nTest gesture recognition\n\n\n\nFinal Checklist\nBefore Publishing\n\n Performance: 72 FPS consistently\n Memory: Under 4GB usage\n Comfort: No motion sickness\n Accessibility: Multiple input methods\n Testing: Multiple user sessions\n Documentation: User guide and controls\n Store Assets: Screenshots and videos\n Legal: Privacy policy and terms\n\nPost-Launch\n\n Analytics: Track usage and performance\n Feedback: Monitor user reviews\n Updates: Plan for bug fixes and features\n Marketing: Promote your VR app\n\nYour RTX 5090 setup will make development and testing much smoother - you can test at high fidelity and have plenty of headroom for complex scenes!"},"30_Templates/Daily":{"slug":"30_Templates/Daily","filePath":"30_Templates/Daily.md","title":"Daily","links":[],"tags":[],"content":"{{date}} ‚Äî Daily Log\nAgenda\nWhat I did\nOutcomes / Artifacts\nKey Learnings\nMood / Energy\nNext Day Intent\nProgress Meter\n\n Feature progress updated in 40_Daily/Progress_Tracker.md\n Backlog item linked\n Any blockers noted\n"},"30_Templates/Note":{"slug":"30_Templates/Note","filePath":"30_Templates/Note.md","title":"{{title}}","links":[],"tags":["xr"],"content":"{{title}}\nSummary\nKey Points\n\n\n\nLinks\n\n\n\nNext\n\n\n"},"30_Templates/Weekly":{"slug":"30_Templates/Weekly","filePath":"30_Templates/Weekly.md","title":"Weekly","links":["40_Daily/README","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog"],"tags":[],"content":"Week {{date:gggg-[W]ww}}\nFocus\nTasks\nDeliverables\nNotes\nLinks\n\nDaily Logs\nBacklog\n"},"40_Daily/2025-09-08":{"slug":"40_Daily/2025-09-08","filePath":"40_Daily/2025-09-08.md","title":"2025-09-08","links":[],"tags":[],"content":"2025-09-08 ‚Äî Daily Log\nAgenda (from notes)\n\nDemo of Mining Project\nSetup my workspace on the lab PC\nMeet other researchers and PhD scholars\nGet lab essentials\n\nWhat I did\n\nReviewed demo build of the mining project; listed strengths and gaps\nConfigured workstation, accounts, and device access\nMet the research team; aligned expectations and communication cadence\nCollected access credentials and essentials\n\nOutcomes / Artifacts\n\nAccess to repo/devices confirmed\nInitial gap list for demo build\n\nMood / Energy\n\nSettled in; motivated to start structured work\n\nNext Day Intent\n\nBegin environment research and OBS setup\n"},"40_Daily/2025-09-09":{"slug":"40_Daily/2025-09-09","filePath":"40_Daily/2025-09-09.md","title":"2025-09-09","links":[],"tags":[],"content":"2025-09-09 ‚Äî Daily Log\nAgenda\n\nUnderstand a day in the life of a coal miner\nDecode tools used by coal miners and their functions\nSetup OBS for livestreaming\nPlan VR devlog and game stream on YouTube\nTest 2 VR games for interaction breakdown\nResearch Demola x IITD; apply for GCI Global 2025\n\nWhat I did\n\nMapped miner workflow: access ‚Üí commute ‚Üí operation ‚Üí egress\nCatalogued tools/machines; drafted VR equivalents and learning goals\nInstalled and configured OBS scenes (desktop + headset capture)\nDrafted VR devlog outline and streaming checklist\nTested 2 VR titles; captured interaction patterns and comfort notes\nCollected information on Demola and GCI opportunities\n\nKey Learnings\n\nTwo-handed tools benefit from assist joints and guided grips\nMaterial-dependent feedback (audio/haptics) drives perceived realism\n\nNext Day Intent\n\nConvert insights into feature backlog; start DOTS drill prototype\n"},"40_Daily/2025-09-10":{"slug":"40_Daily/2025-09-10","filePath":"40_Daily/2025-09-10.md","title":"2025-09-10","links":[],"tags":[],"content":"2025-09-10 ‚Äî Daily Log\nAgenda\n\nXR Roadmap\nHackathon shortlist\nResearch ideas (Chroma/AR/VR)\nLinkedIn devlog post (1)\nVR livestream devlog\nHelp Ramlakhen with website demo\n\nWhat I did\n\nFinalized 90-day XR roadmap baseline and synced calendar\nShortlisted hackathons (XR Chemistry Con, etc.) with dates\nDrafted concept board for color-tracking/AR augmentation\nPosted LinkedIn devlog #1 and scheduled next post\nDry-run livestream; verified audio routing and overlays\nAssisted website demo preparation\n\nOutcomes\n\nRoadmap document checked in; events calendar created\n\nNext Day Intent\n\nRefine learning plan; meet prof; start DOTS-based drill interaction prototype\n"},"40_Daily/2025-09-11":{"slug":"40_Daily/2025-09-11","filePath":"40_Daily/2025-09-11.md","title":"2025-09-11","links":[],"tags":[],"content":"2025-09-11 ‚Äî Daily Log\nAgenda\n\nRefine the learning plan\nVR Devlog on YouTube\nMeeting with prof\nVR Experience Designer YT course\nVR Masterclass\nRepair &amp; upgrade brother‚Äôs laptop (personal)\n\nWhat I did\n\nTightened weekly milestones to align with deliverables\nRecorded Devlog episode draft\nMet with prof; captured action items (see Meeting Minutes 2025-09-11)\nCompleted modules from VR Experience Designer and Masterclass\nPersonal: hardware upgrade tasks\n\nKey Learning\n\nImmersion-first criteria for feature acceptance; prioritize feel over feature count\n\nNext Day Intent\n\nImplement feedback from meeting; prepare hazard feature spec\n"},"40_Daily/2025-09-12":{"slug":"40_Daily/2025-09-12","filePath":"40_Daily/2025-09-12.md","title":"2025-09-12","links":[],"tags":[],"content":"2025-09-12 ‚Äî Daily Log\nAgenda\n\nDefine Deliverables of the Day (DoD)\nUnity XR foundation (interaction)\nExplore VR games for inspiration\n\nWhat I did\n\nSet DoD rubric for interactions\nBuilt XR foundation scene with grab/throw template\nResearched interaction references; noted haptic/audio cues\n\nReflection\n\nIdentified interaction polish gap vs. baseline functionality\n\nNext Day Intent\n\nStart coal extraction loop and cart system prototype\n"},"40_Daily/2025-09-16":{"slug":"40_Daily/2025-09-16","filePath":"40_Daily/2025-09-16.md","title":"2025-09-16","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-16 (Week 1, Day 2)\nGoals\n\nComplete asset inventory run and review Top 50 findings.\nCreate SubScenes for Menu and Level scenes.\nUpdate backlog and systems analysis with any high-impact findings.\n\nLinks\n\nBacklog\nKanban Board\nDOTS Migration Runbook\nSystems Analysis\n\nChecklist (tied to Kanban)\n\n Run artifacts/gen_inventory.ps1 in OOP repo and open Assets_Inventory.md\n Note Top 10 largest assets and add backlog optimization tasks\n Create SubScenes: Menu_Scene, Level_Scene\n Push Kanban updates and mark ‚ÄúDay 1 inventory‚Äù complete\n\nNotes\n\nRecord any missing tags or prefab dependencies discovered in inventory for later DOTS baking.\n"},"40_Daily/2025-09-17":{"slug":"40_Daily/2025-09-17","filePath":"40_Daily/2025-09-17.md","title":"2025-09-17","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-17 (Week 1, Day 3)\nGoals\n\nImplement DrillArmAuthoring + Baker ‚Üí DrillArm component.\nImplement DrillSpotAuthoring + Baker ‚Üí DrillSpot component.\n\nLinks\n\nBacklog\nKanban Board\nDOTS Migration Runbook\nSystems Analysis\n\nChecklist\n\n Create DrillArmAuthoring MonoBehaviour and Baker\n Create DrillSpotAuthoring MonoBehaviour and Baker\n Validate baked entities in SubScenes\n Update Backlog progress\n\nNotes\n\nCapture authoring field mappings from OOP scripts for clarity.\n"},"40_Daily/2025-09-18":{"slug":"40_Daily/2025-09-18","filePath":"40_Daily/2025-09-18.md","title":"2025-09-18","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-18 (Week 1, Day 4)\nGoals\n\nImplement WaterLoggingAuthoring + Baker ‚Üí WaterLogging.\nConvert drill machine and lever prefabs via Bakers.\n\nLinks\n\nBacklog\nKanban Board\nDOTS Migration Runbook\n\nChecklist\n\n Create WaterLoggingAuthoring and Baker\n Add Bakers for drill machine, lever base/handle prefabs\n Bake to entity prefabs and validate in SubScenes\n Update Systems Analysis with converted items\n\nNotes\n\nNote any dependencies (particles/audio/UI) for bridge systems.\n"},"40_Daily/2025-09-19":{"slug":"40_Daily/2025-09-19","filePath":"40_Daily/2025-09-19.md","title":"2025-09-19","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-19 (Week 1, Day 5)\nGoals\n\nImplement DrillArmControlSystem (input ‚Üí rotation with clamps).\nImplement DrillProgress and DrillCompletion systems (+200 on complete).\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n DrillArmControlSystem rotates arm/drill safely\n DrillProgressSystem accumulates time on contact\n DrillCompletionSystem emits ScoreEvent(+200)\n Test in SubScene with baked entities\n\nNotes\n\nEnsure XR input bridge provides expected axes/buttons.\n"},"40_Daily/2025-09-20":{"slug":"40_Daily/2025-09-20","filePath":"40_Daily/2025-09-20.md","title":"2025-09-20","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-20 (Week 1, Day 6)\nGoals\n\nImplement WaterLeakStart, WaterLevelRaise, WaterLevelLower, and PumpToggle systems.\nAdd audio bridge events for water/pump (one-shot/looping).\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n Leak start schedules and plays ambient\n Water level raise/lower respects min/max and speeds\n Pump toggle flips state and audio\n Audio bridge plays/fades correctly\n\nNotes\n\nConsider capping periodic score ticks during lowering.\n"},"40_Daily/2025-09-21":{"slug":"40_Daily/2025-09-21","filePath":"40_Daily/2025-09-21.md","title":"2025-09-21","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-21 (Week 1, Day 7)\nGoals\n\nImplement ScoreSystem with ScoreEvent buffer and MistakeSystem.\nImplement HUD Score presenter bridge (ECS ‚Üí TMP).\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n ScoreSystem aggregates events and clamps ‚â• 0\n MistakeSystem updates mistake counters\n HUD presenter reads ECS and updates UI\n Verify event flow from Drill/Water systems\n\nNotes\n\nKeep bridge logic minimal; avoid heavy per-frame allocations.\n"},"40_Daily/2025-09-22":{"slug":"40_Daily/2025-09-22","filePath":"40_Daily/2025-09-22.md","title":"2025-09-22","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-22 (Week 2, Day 8)\nGoals\n\nImplement VehicleAuthoring + VehicleMoveSystem (hybrid physics acceptable).\nMap Input System actions to ECS input singleton(s).\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n Author vehicle parameters and bake entities\n Implement movement and turning with smoothing\n Input bridge writes move/turn/trigger states\n Test in SubScene with car prefab\n\nNotes\n\nConsider starting with classic Rigidbody, then migrate to DOTS physics later.\n"},"40_Daily/2025-09-23":{"slug":"40_Daily/2025-09-23","filePath":"40_Daily/2025-09-23.md","title":"2025-09-23","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-23 (Week 2, Day 9)\nGoals\n\nImplement ForkliftLiftAuthoring + ForkliftLiftSystem; add Liftable tag.\nConvert coal, pipes, cave prefabs via Bakers.\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n Author forklift lift parameters; bake\n Implement lift raise/lower + clamp ranges\n Attach/detach Liftable using Parent/Child or LinkedEntityGroup\n Convert coal/pipes/cave prefabs\n\nNotes\n\nShow navigation aids via classic UI for now if needed.\n"},"40_Daily/2025-09-24":{"slug":"40_Daily/2025-09-24","filePath":"40_Daily/2025-09-24.md","title":"2025-09-24","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-24 (Week 2, Day 10)\nGoals\n\nImplement CoalSpawnerAuthoring + CoalSpawnSystem.\nUpdate Systems Analysis matrices with converted items.\n\nLinks\n\nBacklog\nKanban Board\nSystems Analysis\n\nChecklist\n\n Author CoalSpawner fields and bake\n Implement spawn on load or on demand\n Validate spawn positions and scaling\n Update Systems Analysis mapping\n\nNotes\n\nConsider BlobAsset for spawn pattern config if needed.\n"},"40_Daily/2025-09-25":{"slug":"40_Daily/2025-09-25","filePath":"40_Daily/2025-09-25.md","title":"2025-09-25","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-25 (Week 2, Day 11)\nGoals\n\nAuthor blasting interactables and add BlastingSystem hooks.\nAdd particles bridge (ECS flags ‚Üí VFX/ParticleSystem).\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n Blasting sockets/button authoring + bake\n Implement BlastingSystem scoring hooks\n Particles bridge triggers on ECS flags\n Validate interactions in SubScene\n\nNotes\n\nKeep system minimal; refine later with safety rules.\n"},"40_Daily/2025-09-26":{"slug":"40_Daily/2025-09-26","filePath":"40_Daily/2025-09-26.md","title":"2025-09-26","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-26 (Week 2, Day 12)\nGoals\n\nOptimize top 50 assets (ASTC/ETC textures, Vorbis audio) and reimport.\nAudit URP shaders; replace Surface Shaders if found.\n\nLinks\n\nBacklog\nExternal Overview Utilization\n\nChecklist\n\n Apply texture compression and mesh compression\n Adjust audio import settings for VR\n Shader audit and replacements\n Note deltas in Assets_Inventory.md\n\nNotes\n\nKeep backups of import presets; document changes.\n"},"40_Daily/2025-09-27":{"slug":"40_Daily/2025-09-27","filePath":"40_Daily/2025-09-27.md","title":"2025-09-27","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-27 (Week 2, Day 13)\nGoals\n\nParity tests: drilling, water logging, vehicles, forklift, blasting.\nPerformance profiling on Quest 3; budget adjustments.\n\nLinks\n\nBacklog\nDOTS Migration Runbook\n\nChecklist\n\n Create test scenarios per module\n Record discrepancies and file backlog tasks\n Run profiler; capture frame timing and hotspots\n Apply easy wins (Burst, job scheduling, pooling)\n\nNotes\n\nFocus on hitching and main-thread spikes first.\n"},"40_Daily/2025-09-28":{"slug":"40_Daily/2025-09-28","filePath":"40_Daily/2025-09-28.md","title":"2025-09-28","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","70_Project_Documentation/DOTS_Migration_Plan"],"tags":["daily","planning","execution"],"content":"Daily ‚Äî 2025-09-28 (Week 2, Day 14)\nGoals\n\nImplement Results UI bridge and RunResult component (replace GlobalLevelResult).\nClean up docs, link indexes, and close completed backlog items.\n\nLinks\n\nBacklog\nSystems Analysis\nDOTS Migration Plan\n\nChecklist\n\n Add RunResult ECS component and population on level end\n Results UI presenter reads ECS state\n Update docs and indexes; mark completed items done\n Plan next week‚Äôs priorities\n\nNotes\n\nConsider persisting results for session summary.\n"},"40_Daily/Progress_Tracker":{"slug":"40_Daily/Progress_Tracker","filePath":"40_Daily/Progress_Tracker.md","title":"Progress_Tracker","links":[],"tags":[],"content":"Progress Tracker\nWeekly Metrics (Week 1)\n\nDays worked: 5\nCompleted tasks: 18\nFeature movement: Drill DOTS loop from 0% ‚Üí 30%\nContent: 1 devlog script, livestream dry-run\nResearch notes added: 2\n\nSpeed Estimate\n\nAvg feature progress/day: ~6%\nRisk: integration delays on audio/haptics\n\nNext Week Targets\n\nDrill DOTS loop 30% ‚Üí 70%\nSpatial audio pass\nCoal extraction prototype ready for demo\n"},"40_Daily/README":{"slug":"40_Daily/README","filePath":"40_Daily/README.md","title":"README","links":[],"tags":[],"content":"Daily Logs\nUse the template below for each day.\nTemplate\n\nAgenda\nWhat I did\nOutcomes / Artifacts\nKey Learnings\nMood / Energy\nNext Day Intent\n\nSee Progress_Tracker.md for weekly metrics."},"60_Devlog_Content/YouTube_Devlog_Script_Week1":{"slug":"60_Devlog_Content/YouTube_Devlog_Script_Week1","filePath":"60_Devlog_Content/YouTube_Devlog_Script_Week1.md","title":"YouTube_Devlog_Script_Week1","links":[],"tags":[],"content":"YouTube Devlog Script - Week 1: ‚ÄúLearning XR in Public‚Äù\nVideo Title: ‚ÄúWhy I‚Äôm Learning XR Development in Public | VR Coal Mining Simulator Journey‚Äù\nDuration: 3-5 minutes\nTone: Authentic, reflective, motivating\nTarget Audience: XR enthusiasts, developers, students\n\nScript\n[0:00-0:30] Introduction\n[Camera on Prabhakar, casual setup with Quest 3 visible]\n‚ÄúHey everyone! I‚Äôm Prabhakar Deep Tirkey, and I‚Äôm a Research Associate at the DeSCINED Lab at IIT Delhi. You might be wondering why I‚Äôm holding a Quest 3 and talking to a camera about learning XR development in public.‚Äù\n[Show Quest 3, gesture with hands]\n‚ÄúHere‚Äôs the thing - I‚Äôm on a 90-day probation period where I need to prove I can deliver on a VR coal mining training simulator project. But instead of just coding in isolation, I‚Äôm documenting this entire journey through livestreams and devlogs. Why? Because I believe the best learning happens when you share it with others.‚Äù\n[0:30-1:30] Why XR? Why This Journey?\n[Cut to screen showing Unity interface]\n‚ÄúSee, I‚Äôm not just building a game here. I‚Äôm designing immersive experiences that could literally save lives. This VR simulator will train coal miners on safety procedures - when a gas leak happens, when equipment fails, when every second counts.‚Äù\n[Show some Unity XR toolkit interface]\n‚ÄúMy background is in cognitive science and game design. For Quest 3, I‚Äôm also migrating key systems to Unity DOTS/ECS to hit mobile VR performance while keeping the interactions believable.‚Äù\n[Back to camera]\n‚ÄúThat‚Äôs why I‚Äôm sharing this journey. Because immersive design is still so new, and we‚Äôre all figuring it out together. Every bug I fix, every interaction I design, every mistake I make - it‚Äôs all part of learning how to create experiences that matter.‚Äù\n[1:30-2:30] This Week‚Äôs Progress\n[Screen recording of Unity project]\n‚ÄúThis week, I focused on the foundation - setting up the XR Interaction Toolkit, planning the DOTS migration, and starting an ECS-based drill interaction.‚Äù\n[Show entity authoring, subscene baking]\n‚ÄúMaking something feel ‚Äòreal‚Äô in VR isn‚Äôt about perfect graphics. It‚Äôs about the tiny details ‚Äî tactile cues, weight simulation, and spatial audio ‚Äî tuned for the Quest 3 budget.‚Äù\n[2:30-3:30] Biggest Challenge &amp; Learning\n[Back to camera, more reflective tone]\n‚ÄúThe biggest shift was moving from classic OOP MonoBehaviours to data-oriented ECS. It forced me to break features into components and systems ‚Äî which actually made performance and debugging clearer.‚Äù\n[Show profiler and Entities Hierarchy]\n‚ÄúThe breakthrough was getting the drill head interaction running as entities with physics and event-driven haptics, keeping frame times stable.‚Äù\n[3:30-4:30] Next Steps\n[Show roadmap or planning document]\n‚ÄúNext week, I‚Äôm pushing the drilling loop further, wiring scoring and penalties into ECS, and beginning the cart/conveyor entity workflow.‚Äù\n[Show some design sketches or notes]\n‚ÄúThe design challenge remains the same: communicate urgency and safety without overload, especially on a mobile headset.‚Äù\n[Back to camera]\n‚ÄúI‚Äôll be livestreaming the development process every week, sharing both the successes and the struggles.‚Äù\n[4:30-5:00] Outro\n[Show Quest 3 again]\n‚ÄúIf you‚Äôre interested in XR development, immersive design, or DOTS for VR, hit subscribe and join me.‚Äù\n\nProduction Notes\nVisual Elements Needed:\n\nXR Interaction Toolkit + Entities workflow\nQuest 3 headset shots\nECS authoring/inspector\nCode snippets (generic, no lab code)\nDesign sketches/notes\nRoadmap/planning documents\n\nAudio:\n\nClear, conversational tone\nBackground music (subtle, tech-focused)\nGood microphone quality for voice clarity\n\nEditing Style:\n\nQuick cuts between talking head and screen recordings\nSmooth transitions\nText overlays for key points\nProfessional but approachable\n\nCall-to-Action:\n\nSubscribe for weekly updates\nFollow on social media\nComment with questions or suggestions\nCheck out previous videos in the series\n\n\nKey Messages to Convey:\n\nAuthenticity: Real struggles and real learning\nPurpose: Building something meaningful\nCommunity: Learning together\nTechnical Depth: DOTS for mobile VR\nHuman Impact: Training that improves safety\n"},"70_Project_Documentation/Code_Templates/Drill_Mining_Loop_ECS":{"slug":"70_Project_Documentation/Code_Templates/Drill_Mining_Loop_ECS","filePath":"70_Project_Documentation/Code_Templates/Drill_Mining_Loop_ECS.md","title":"Drill_Mining_Loop_ECS","links":[],"tags":[],"content":"Drill Mining Loop (ECS) ‚Äî Template\nusing Unity.Burst;\nusing Unity.Entities;\nusing Unity.Mathematics;\nusing Unity.Transforms;\n \npublic struct DrillHead : IComponentData { public float pressure; public float angle; }\npublic struct DrillSpot : IComponentData { public float hardness; public float progress; public float3 normal; }\npublic struct DrillContact : IBufferElementData { public Entity spot; public float delta; }\n \n[BurstCompile]\npublic partial struct DrillMotionSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var (drill, xform) in SystemAPI.Query&lt;RefRW&lt;DrillHead&gt;, RefRW&lt;LocalTransform&gt;&gt;())\n        {\n            // integrate pressure/angle into transform or physics proxy\n        }\n    }\n}\n \n[BurstCompile]\npublic partial struct DrillCollisionSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        // Detect contacts (via physics events or proximity) and write to DrillContact buffers\n    }\n}\n \n[BurstCompile]\npublic partial struct DrillProgressSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var (contacts, head) in SystemAPI.Query&lt;DynamicBuffer&lt;DrillContact&gt;, RefRO&lt;DrillHead&gt;&gt;())\n        {\n            for (int i = 0; i &lt; contacts.Length; i++)\n            {\n                var c = contacts[i];\n                if (!SystemAPI.Exists(c.spot)) continue;\n                var spot = SystemAPI.GetComponentRW&lt;DrillSpot&gt;(c.spot);\n                float rate = math.max(0f, head.ValueRO.pressure - spot.ValueRO.hardness);\n                spot.ValueRW.progress += rate * SystemAPI.Time.DeltaTime;\n            }\n        }\n    }\n}"},"70_Project_Documentation/Code_Templates/Gas_Zone_and_Roof_Collapse_ECS":{"slug":"70_Project_Documentation/Code_Templates/Gas_Zone_and_Roof_Collapse_ECS","filePath":"70_Project_Documentation/Code_Templates/Gas_Zone_and_Roof_Collapse_ECS.md","title":"Gas_Zone_and_Roof_Collapse_ECS","links":[],"tags":[],"content":"Gas Zone + Roof Collapse ‚Äî Template\nusing Unity.Burst;\nusing Unity.Entities;\n \npublic struct GasZone : IComponentData { public float ppm; public float threshold; public bool alarmed; }\npublic struct RoofInstability : IComponentData { public float risk; public float timeToFail; public bool collapsed; }\n \n[BurstCompile]\npublic partial struct GasZoneSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var zone in SystemAPI.Query&lt;RefRW&lt;GasZone&gt;&gt;())\n        {\n            if (!zone.ValueRO.alarmed &amp;&amp; zone.ValueRO.ppm &gt;= zone.ValueRO.threshold)\n            {\n                zone.ValueRW.alarmed = true;\n                // TODO: emit alarm event\n            }\n        }\n    }\n}\n \n[BurstCompile]\npublic partial struct RoofCollapseSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var roof in SystemAPI.Query&lt;RefRW&lt;RoofInstability&gt;&gt;())\n        {\n            if (roof.ValueRO.collapsed) continue;\n            roof.ValueRW.timeToFail -= SystemAPI.Time.DeltaTime * roof.ValueRO.risk;\n            if (roof.ValueRW.timeToFail &lt;= 0f)\n            {\n                roof.ValueRW.collapsed = true;\n                // TODO: spawn debris, block path, trigger penalties\n            }\n        }\n    }\n}"},"70_Project_Documentation/Code_Templates/Hazards_Random_Spawner_ECS":{"slug":"70_Project_Documentation/Code_Templates/Hazards_Random_Spawner_ECS","filePath":"70_Project_Documentation/Code_Templates/Hazards_Random_Spawner_ECS.md","title":"Hazards_Random_Spawner_ECS","links":[],"tags":[],"content":"Hazards: Random Spawner ‚Äî Template\nusing Unity.Burst;\nusing Unity.Entities;\nusing Unity.Mathematics;\n \npublic struct HazardSeed : IComponentData { public uint value; public float cooldown; public float timer; }\npublic struct HazardSpawn : IComponentData { public Entity prefab; public float minDelay; public float maxDelay; }\n \n[BurstCompile]\npublic partial struct HazardSpawnerSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var (seed, spawn) in SystemAPI.Query&lt;RefRW&lt;HazardSeed&gt;, RefRO&lt;HazardSpawn&gt;&gt;())\n        {\n            seed.ValueRW.timer -= SystemAPI.Time.DeltaTime;\n            if (seed.ValueRW.timer &gt; 0) continue;\n \n            var rand = Random.CreateFromIndex(seed.ValueRO.value++);\n            var delay = math.lerp(spawn.ValueRO.minDelay, spawn.ValueRO.maxDelay, rand.NextFloat());\n            seed.ValueRW.timer = delay;\n \n            var ecb = new EntityCommandBuffer(Unity.Collections.Allocator.Temp);\n            var e = ecb.Instantiate(spawn.ValueRO.prefab);\n            ecb.Playback(state.EntityManager);\n        }\n    }\n}"},"70_Project_Documentation/Code_Templates/INDEX":{"slug":"70_Project_Documentation/Code_Templates/INDEX","filePath":"70_Project_Documentation/Code_Templates/INDEX.md","title":"INDEX","links":["README","70_Project_Documentation/Code_Templates/XRInput_Bridge_ECS","70_Project_Documentation/Code_Templates/Drill_Mining_Loop_ECS","70_Project_Documentation/Code_Templates/Hazards_Random_Spawner_ECS","70_Project_Documentation/Code_Templates/Gas_Zone_and_Roof_Collapse_ECS","70_Project_Documentation/Code_Templates/NPC_Miner_StateMachine_ECS","70_Project_Documentation/Code_Templates/Scoring_and_Feedback_ECS","VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","DOTS_Migration_Plan"],"tags":[],"content":"Code Templates ‚Äî Index\n\nOverview\nXR Input Bridge ‚Üí ECS\nDrill Mining Loop (ECS)\nHazards: Random Spawner\nGas Zone + Roof Collapse\nNPC Miner State Machine\nScoring and Feedback\n\nRelated:\n\nFeature ‚Äî Drill System (DOTS)\nDOTS Migration Plan\n"},"70_Project_Documentation/Code_Templates/NPC_Miner_StateMachine_ECS":{"slug":"70_Project_Documentation/Code_Templates/NPC_Miner_StateMachine_ECS","filePath":"70_Project_Documentation/Code_Templates/NPC_Miner_StateMachine_ECS.md","title":"NPC_Miner_StateMachine_ECS","links":[],"tags":[],"content":"NPC Miner State Machine ‚Äî Template\nusing Unity.Burst;\nusing Unity.Entities;\n \npublic enum MinerState : byte { Idle, Mining, Panic, Injured, Assisting }\n \npublic struct MinerAI : IComponentData { public MinerState state; public float timer; }\n \n[BurstCompile]\npublic partial struct MinerAISystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var ai in SystemAPI.Query&lt;RefRW&lt;MinerAI&gt;&gt;())\n        {\n            ai.ValueRW.timer -= SystemAPI.Time.DeltaTime;\n            if (ai.ValueRW.timer &gt; 0) continue;\n \n            switch (ai.ValueRO.state)\n            {\n                case MinerState.Idle: ai.ValueRW.state = MinerState.Mining; ai.ValueRW.timer = 5f; break;\n                case MinerState.Mining: /* hazard check */ break;\n                case MinerState.Panic: /* seek help */ break;\n                case MinerState.Injured: /* wait */ break;\n                case MinerState.Assisting: /* assist neighbor */ break;\n            }\n        }\n    }\n}"},"70_Project_Documentation/Code_Templates/README":{"slug":"70_Project_Documentation/Code_Templates/README","filePath":"70_Project_Documentation/Code_Templates/README.md","title":"README","links":["70_Project_Documentation/Code_Templates/XRInput_Bridge_ECS","70_Project_Documentation/Code_Templates/Drill_Mining_Loop_ECS","70_Project_Documentation/Code_Templates/Hazards_Random_Spawner_ECS","70_Project_Documentation/Code_Templates/Gas_Zone_and_Roof_Collapse_ECS","70_Project_Documentation/Code_Templates/NPC_Miner_StateMachine_ECS","70_Project_Documentation/Code_Templates/Scoring_and_Feedback_ECS"],"tags":[],"content":"DOTS/ECS Code Templates ‚Äî VR Mines\nThese snippets are starter templates to accelerate prototyping in a hybrid XRI + DOTS project.\nTemplates:\n\nXR Input Bridge ‚Üí ECS\nDrill Mining Loop (ECS)\nHazards: Random Spawner\nGas Zone + Roof Collapse\nNPC Miner State Machine\nScoring and Feedback\n"},"70_Project_Documentation/Code_Templates/Scoring_and_Feedback_ECS":{"slug":"70_Project_Documentation/Code_Templates/Scoring_and_Feedback_ECS","filePath":"70_Project_Documentation/Code_Templates/Scoring_and_Feedback_ECS.md","title":"Scoring_and_Feedback_ECS","links":[],"tags":[],"content":"Scoring and Feedback ‚Äî Template\nusing Unity.Burst;\nusing Unity.Entities;\n \npublic struct ScoreAccumulator : IComponentData { public int value; }\npublic struct PenaltyEvent : IBufferElementData { public int delta; public ushort code; }\npublic struct BonusEvent : IBufferElementData { public int delta; public ushort code; }\n \n[BurstCompile]\npublic partial struct ScoringSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var (score, penalties, bonuses) in SystemAPI.Query&lt;RefRW&lt;ScoreAccumulator&gt;, DynamicBuffer&lt;PenaltyEvent&gt;, DynamicBuffer&lt;BonusEvent&gt;&gt;())\n        {\n            for (int i = 0; i &lt; penalties.Length; i++) score.ValueRW.value += penalties[i].delta;\n            penalties.Clear();\n            for (int i = 0; i &lt; bonuses.Length; i++) score.ValueRW.value += bonuses[i].delta;\n            bonuses.Clear();\n        }\n    }\n}"},"70_Project_Documentation/Code_Templates/XRInput_Bridge_ECS":{"slug":"70_Project_Documentation/Code_Templates/XRInput_Bridge_ECS","filePath":"70_Project_Documentation/Code_Templates/XRInput_Bridge_ECS.md","title":"XRInput_Bridge_ECS","links":[],"tags":[],"content":"XR Input Bridge ‚Üí ECS (Template)\n// XRInputAuthoring.cs (GO-side)\nusing Unity.Entities;\nusing UnityEngine;\n \npublic class XRInputAuthoring : MonoBehaviour\n{\n    public float trigger;\n    public Vector2 joystick;\n}\n \npublic class XRInputBaker : Baker&lt;XRInputAuthoring&gt;\n{\n    public override void Bake(XRInputAuthoring authoring)\n    {\n        var entity = GetEntity(TransformUsageFlags.None);\n        AddComponent(entity, new XRInput());\n        AddBuffer&lt;InputEvent&gt;(entity);\n    }\n}\n \npublic struct XRInput : IComponentData {}\n \npublic struct InputEvent : IBufferElementData\n{\n    public byte type; // 0=Trigger,1=JoyX,2=JoyY,3=Button\n    public float value;\n}\n// XRInputBridgeSystem.cs (ECS-side)\nusing Unity.Burst;\nusing Unity.Entities;\n \n[BurstCompile]\npublic partial struct XRInputBridgeSystem : ISystem\n{\n    public void OnUpdate(ref SystemState state)\n    {\n        foreach (var (buffer, authoring) in SystemAPI.Query&lt;DynamicBuffer&lt;InputEvent&gt;, RefRO&lt;XRInput&gt;&gt;())\n        {\n            // TODO: push values from XRI (via MonoBehaviour update) to buffer\n            // Example placeholder: buffer.Add(new InputEvent { type=0, value=1f });\n        }\n    }\n}"},"70_Project_Documentation/DOTS_Migration_Plan":{"slug":"70_Project_Documentation/DOTS_Migration_Plan","filePath":"70_Project_Documentation/DOTS_Migration_Plan.md","title":"DOTS_Migration_Plan","links":["VR_Coal_Mining_Simulator/External_Overview_Utilization","VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","VR_Coal_Mining_Simulator/Backlog"],"tags":["plan","ecs"],"content":"DOTS Migration Plan ‚Äî VR Coal Mining Simulator\nGoals\n\nRun smoothly on Quest 3 by migrating expensive OOP systems to ECS\nPreserve existing assets; use bakers/authoring to convert prefabs to entities\n\nReference: External detailed plan at c:\\Users\\ADMIN\\Documents\\GitHub\\VR-Mines-New-Project\\Assets\\artifacts\\OOP_to_DOTS_Migration_Plan.md. See also External Overview Utilization and DOTS Migration Runbook.\nScope (Phase 1)\n\nDrill interaction and effects\nCart and conveyor movement\nScoring and penalty evaluation\n\nOut-of-scope in Phase 1: full forklift parity, blasting polish, full UI migration (use bridges first).\nMigration Roadmap\ngantt\n    title DOTS Migration\n    dateFormat  YYYY-MM-DD\n    section Phase 1\n    Drill ECS Prototype           :active, des1, 2025-09-16, 7d\n    Extraction + Cart ECS         :des2, 2025-09-23, 10d\n    Scoring/Penalties ECS         :des3, 2025-10-07, 7d\n\nFull Timeline (Phases 0‚Äì9)\ngantt\n    title OOP ‚Üí DOTS Migration (High-level)\n    dateFormat  YYYY-MM-DD\n    section Phase 0 ‚Äî Setup\n    New DOTS-XR Project, Packages, URP, ASMDEFs     :active, p0, 2025-09-16, 2d\n    section Phase 1 ‚Äî Assets &amp; SubScenes\n    Asset Inventory + SubScenes Skeleton            :p1a, after p0, 2d\n    Prefab Baking (Drill, Levers, Coal, Cave)       :p1b, after p1a, 4d\n    section Phase 2 ‚Äî Authoring &amp; Bakers\n    Authoring + Bakers (Drill/Spot/Water/Vehicle)   :p2, after p1b, 5d\n    section Phase 3 ‚Äî Core Systems\n    Drill/Water/Score Systems                       :p3, after p2, 6d\n    section Phase 4 ‚Äî Scene &amp; Prefab Conversion\n    Convert Scenes to SubScenes; Entity Prefabs     :p4, after p3, 5d\n    section Phase 5 ‚Äî Input &amp; XR Bridges\n    XR/Input Bridge to ECS                          :p5, after p3, 3d\n    section Phase 6 ‚Äî UI/Audio/VFX Bridges\n    HUD/Audio/VFX Presenters                        :p6, after p5, 3d\n    section Phase 7 ‚Äî Content Optimization\n    Optimize Top Assets (ASTC/ETC, Vorbis)          :p7, after p4, 3d\n    section Phase 8 ‚Äî Testing &amp; Validation\n    Parity + Performance Profiling                  :p8, after p6, 4d\n    section Phase 9 ‚Äî Rollout &amp; Cleanup\n    Remove Legacy, Docs, CI Checks                  :p9, after p8, 3d\n\nTechnical Approach\n\nSubscene workflow: keep scenes author-friendly; bake to entities for play\nComponents: minimal IComponentData; blobs for static config\nSystems: update in FixedStepSimulationSystemGroup for physics\nEvents: use IBufferElementData queues or EntityCommandBuffer for spawn/despawn\n\nAuthoring + Bakers (Phase 1 targets): DrillArm, DrillSpot, WaterLogging, Vehicle, ForkliftLift (skeleton), CoalSpawner, WearZone.\nCore Systems: DrillArmControl, DrillProgress/Completion, WaterLeakStart/Raise/Lower, PumpToggle, VehicleMove, ForkliftLift, CoalSpawn, Score, Mistake, Bridges (UI/Audio/VFX).\nPackages\n\nUnity Entities, Entities.Graphics, Unity Physics, Collections, Jobs, Burst\n\nXR + Bridges: XR Interaction Toolkit (classic), OpenXR, Input System ‚Üí ECS input bridge.\nPerformance Targets\n\n72+ FPS on Quest 3\nMain thread frame time &lt; 13 ms; CPU-bound systems Burst-compiled\n\nContent optimization: use asset inventory outputs to compress large textures (ASTC/ETC), mesh compression, Vorbis audio quality.\nRisks\n\nTeam familiarity with ECS; mitigate via samples and incremental migration\nInterop with XR Toolkit; isolate XR input in bridge system\n\nPhysics parity (vehicles/forklift): start hybrid (classic Rigidbody) with ECS input until DOTS physics parity.\nMilestones\n\nWeek 1‚Äì2: Drill ECS prototype\nWeek 3‚Äì4: Extraction + Cart ECS\nWeek 5‚Äì6: Scoring/penalties ECS; profiling and polish\n\nSee Runbook for daily steps and Backlog for actionable checklists.\nPhase Summaries\nPhase 0 ‚Äî Setup (New DOTS-XR Project)\n\nPurpose: clean baseline with Entities, URP, XR, ASMDEFs.\nOutputs: fresh project, URP assets, Entities packages, XR/OpenXR, ECS folder/ASMDEF structure.\nRisks: version mismatches, XR loader quirks.\nExit: project builds, XR rig runs, ECS code compiles separately.\n\nPhase 1 ‚Äî Assets &amp; SubScenes\n\nPurpose: reuse content safely; prepare scenes for entity conversion.\nOutputs: asset inventory (CSV/MD), SubScenes per scene, high-impact assets identified.\nRisks: heavy assets hurting Quest performance.\nExit: target scenes have SubScenes; hotspots identified.\n\nPhase 2 ‚Äî Authoring &amp; Bakers\n\nPurpose: translate OOP data into ECS-friendly authoring.\nOutputs: Authoring + Bakers for DrillArm, DrillSpot, WaterLogging, Vehicle, ForkliftLift, CoalSpawner, WearZone.\nRisks: missing data fields; wrong TransformUsageFlags.\nExit: baking produces correct components in SubScenes.\n\nPhase 3 ‚Äî Core Systems\n\nPurpose: replace MonoBehaviour updates with ECS systems.\nOutputs: Drill control/progress/completion; Water leak/raise/lower/pump toggle; Score/Mistake; envelope bridges.\nRisks: update order bugs, unbounded per-frame work.\nExit: Drill + Water + Score loops function in ECS test scenes.\n\nPhase 4 ‚Äî Scene &amp; Prefab Conversion\n\nPurpose: move runtime logic from GameObjects to Entities.\nOutputs: converted SubScenes; baked entity prefabs (drill, levers, pipes, coal, cave parts).\nRisks: hidden MonoBehaviour dependencies; missing references post-bake.\nExit: scenes run primarily via ECS; classic kept only for authoring/UX.\n\nPhase 5 ‚Äî Input &amp; XR Bridges\n\nPurpose: make XR/Input System drive ECS data.\nOutputs: classic‚ÜíECS input singleton(s); XR interactions emitting ECS events.\nRisks: input latency or mapping drift.\nExit: XR controllers reliably update ECS input each frame.\n\nPhase 6 ‚Äî UI/Audio/VFX Bridges\n\nPurpose: present ECS state via classic systems.\nOutputs: HUD presenter (TMP), audio bridge (one-shot/looping), VFX bridge (particles/VFXGraph).\nRisks: main-thread spikes, GC churn.\nExit: score/mistakes/audio/VFX reflect ECS events with stable frame time.\n\nPhase 7 ‚Äî Content Optimization\n\nPurpose: hit Quest performance budgets via import settings.\nOutputs: compressed textures (ASTC/ETC), optimized meshes, tuned audio (Vorbis), shader audits.\nRisks: visual regressions; shader incompatibilities.\nExit: inventory deltas show reduced sizes; visuals acceptable.\n\nPhase 8 ‚Äî Testing &amp; Validation\n\nPurpose: prove parity and stability.\nOutputs: parity scenarios (drill/water/vehicles/forklift/blasting), profiler captures, issue list with fixes.\nRisks: regressions under load; physics parity gaps.\nExit: parity met; 72/90 Hz on device; no critical regressions.\n\nPhase 9 ‚Äî Rollout &amp; Cleanup\n\nPurpose: solidify ECS baseline and remove legacy.\nOutputs: removed unused OOP scripts; docs mapping authoring‚Üícomponents; CI checks for baking/build.\nRisks: premature deletion; undocumented behaviors.\nExit: clean repo, documented ownership, green CI, published guidance.\n"},"70_Project_Documentation/Design_Brief_Game_Design_Gamification":{"slug":"70_Project_Documentation/Design_Brief_Game_Design_Gamification","filePath":"70_Project_Documentation/Design_Brief_Game_Design_Gamification.md","title":"Design_Brief_Game_Design_Gamification","links":["80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","80_Research_Notes/Game_Design_Fundamentals_Bible","80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","80_Research_Notes/VR_Storytelling_and_Narrative_Design","90_Roadmap_Updates/90_Day_Master_Plan"],"tags":["brief","design","gamification","mda","storytelling"],"content":"VR Training ‚Äî Game Design &amp; Gamification Brief (Designer View)\n1. Core Design Frameworks (short)\n\nMDA (Mechanics ‚Üí Dynamics ‚Üí Aesthetics): build mechanics (rules, systems), test dynamics (player/system), iterate toward targeted aesthetics (feelings: competence, tension, discovery). Use MDA to ensure every mechanic supports training outcomes (safety, skill).\nSee: MDA for VR and Game Design Fundamentals ‚Äî Bible\nGamification: Octalysis (8 core drives ‚Äî Meaning, Accomplishment, Empowerment, Ownership, Social Influence, Scarcity, Unpredictability, Avoidance). Use to choose meaningful motivators (not just points).\nSee: Gamification Frameworks\nPlayer‚Äëcentred design / UX: align to user goals (learn safety, not chase points). Research + iteration; don‚Äôt paint gamification on top.\nSource roundup in research note above.\n\n2. High‚Äëlevel Game Design Principles to Follow\n\nMeaningful Choice: every mechanic forces tradeoffs (mine faster vs. check safety)\nClear Feedback: immediate, perceivable (audio, haptics, HUD)\nProgression &amp; Mastery: short loops (tutorial ‚Üí repeat) + long loops (badges, ranks)\nRisk &amp; Reward: calibrated penalties; positive reinforcement; safe failure\nNarrative Context: embed tasks in ‚Äúday in a miner‚Äôs life‚Äù; narrative debriefs\nSee: VR Storytelling\n\n3. MDA Applied to VR Mining Simulator (examples)\n\nMechanics: tool physics (drill head), PPE checks, hazard systems (roof/gas/equipment), scoring &amp; badges, NPC states\nDynamics: speed vs. safety; helping NPCs vs. throughput; tension cycles (calm ‚Üí hazard ‚Üí resolution)\nAesthetics: competence, arousal/tension, relatedness, meaning (real‚Äëworld impact)\n\n4. Gamification Design (practical structure)\n\nCore Drives to use: Meaning (CD1), Accomplishment (CD2), Empowerment (CD3), Social Influence (CD5), Unpredictability (CD7)\nConcrete Mechanics:\n\nSession Score = w1¬∑Efficiency + w2¬∑Safety + w3¬∑ResponseTime (breakdown in debrief)\nBadges/Titles: Safety First, Quick Responder (&lt;2s avg), Team Saver\nDaily Objectives / Micro‚Äëquests (guided practice)\nProgression gates: unlock higher risk only after safety competence\nPersistent Profile: history + heatmaps of common mistakes\nReward Economy: cosmetics, advanced scenarios, certificates (where supported)\n\n\n\n5. Storytelling &amp; Narrative (practical)\n\nSlice‚Äëof‚Äëlife framing: start‚Äëof‚Äëshift ritual, small NPC beats, reflective debriefs\nMicro‚Äënarratives per hazard: cause + short learning clip\nTone: serious, respectful ‚Äî gamification must not trivialize danger\n\n6. Procedural Boss‚ÄëLevel (key mechanics)\n\nHazard Manager: rule‚Äëbased + probability curves; frequency rises with time/unsafe acts\nHazard Composition: single + compound events (gas ‚Üí equipment ‚Üí roof)\nPriority Events: conflict‚Äëof‚Äëpriorities (save NPC vs. stop conveyor)\nAdaptive Difficulty: simplify hazards for low safety score; increase repetition for practice\nDebrief: after‚Äëaction review, replay highlights, coaching\n\n7. Implementation &amp; Testing Checklist (VR/DOTS)\n\nBuild minimal viable hazard in DOTS; measure alarm perception latency (&lt;200 ms)\nMetrics: safety infractions, reaction time distribution, completion time, repeated errors, sickness reports\nUsability: miners/domain experts; iterate on comfort (locomotion, warnings)\nEthics: avoid traumatic realism; opt‚Äëouts; gradual exposure\n\n8. Example Design Recipes (quick wins)\n\nRecipe A ‚Äî Safety Streak: consecutive compliant sessions ‚Üí badge + small XP boost\nRecipe B ‚Äî Quick Rescue Mini‚Äëquest: timed NPC assist sequence ‚Üí Team Saver badge + learning clip\nRecipe C ‚Äî Procedural Boss Wave: 3 hazards in 120s; scoring favors safety + efficiency balance\n\n9. Metrics &amp; Success Criteria\n\nLearning: fewer repeated infractions after 5 sessions\nEngagement: session completion rate; time‚Äëon‚Äëtask\nTransfer: improved checklist compliance in assessments\nComfort: low sickness reports; stable 72‚Äì90 Hz\n\n10. References &amp; Foundations (curated)\n\nMDA; The Design Gym; Juegos Studio; MagicMedia storytelling; Octalysis (Yu‚Äëkai Chou); academic gamification reviews; Interaction Design Foundation; Bible\n\nScope &amp; Timeline Note\n\nDevelopment targets Day 90 for a complete, demo‚Äëready training build.\nA dedicated Post‚Äë90 Polish phase follows for performance, UX, audio/visual, and localization refinements.\nSee: 90-Day Build Plan + Post-90 Polish.\n\n\n\nFinal design note: Treat the sim as a learning ecosystem ‚Äî mechanics teach, dynamics reveal mistakes, aesthetics respect real‚Äëworld risk while motivating practice. Gamification scaffolds deliberate practice and must map to correct behaviors.\n"},"70_Project_Documentation/GDD/VR_Mines_GDD":{"slug":"70_Project_Documentation/GDD/VR_Mines_GDD","filePath":"70_Project_Documentation/GDD/VR_Mines_GDD.md","title":"VR Mines: SafeOps ‚Äî Game Design Document (Quest 3 + DOTS)","links":["VR_Coal_Mining_Simulator/Backlog","DOTS_Migration_Plan","VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","80_Research_Notes/VR_Storytelling_and_Narrative_Design","80_Research_Notes/Game_Design_Fundamentals_Bible","VR_Coal_Mining_Simulator/GamePlay_Spec","VR_Coal_Mining_Simulator/Mechanics_Spec","VR_Coal_Mining_Simulator/User_Journey_Flow","VR_Coal_Mining_Simulator/Design_Experience_Guidelines","90_Roadmap_Updates/90_Day_Master_Plan"],"tags":["gdd","vr","dots","quest3"],"content":"\nThis is the Obsidian-linked GDD. Original source: external d:\\gdd\\VR_Mines_GDD.md.\n\nOverview\n\nOwner: You\nTimeline: 90 days (ship on Day 90)\nHubs: Backlog ‚Ä¢ DOTS Plan ‚Ä¢ Drill System (DOTS) ‚Ä¢ Immersion Research ‚Ä¢ Roadmap W1\nResearch links: MDA for VR ‚Ä¢ Gamification ‚Ä¢ Storytelling in VR ‚Ä¢ Game Design Fundamentals ‚Äî Bible\n\ngraph LR\n  A[Vision] --&gt; B[Architecture]\n  B --&gt; C[Core Systems]\n  C --&gt; D[Gameplay Modules]\n  D --&gt; E[Scoring &amp; UX]\n  E --&gt; F[Performance]\n  F --&gt; G[Schedule]\n\n1. Vision and Goals\n\nHigh concept: A VR coal-mine training-simulation that builds operational skill and safety judgment through hands-on drills, controlled hazards, and actionable coaching.\nSuccess criteria:\n\nRuns on Meta Quest 3 at 75‚Äì120 Hz, stable frame-time with margins (see budgets).\nModular curriculum of short scenarios (10‚Äì20 min) that instructors can sequence.\nClear KPI improvements: fewer mistakes on repeat runs; pass/fail grading aligned to safety SOPs.\n\n\n\n2. Platforms, Targets, Comfort\n\nTarget HMD: Meta Quest 3 (Horizon OS) primary; OpenXR PCVR secondary.\nFrame rates: 75/90/120 Hz modes. Performance testing at native target (no ASW during perf tests).\nComfort defaults: Teleport + snap turn (30‚Äì45¬∞). Smooth locomotion optional (1.25‚Äì1.75 m/s) with dynamic vignette.\n\n3. Tech Stack\n\nEngine: Unity 2023 LTS with URP.\nXR: OpenXR Plugin + XR Interaction Toolkit (XRI) for hands/controllers.\nDOTS: Entities 1.x, Entities Graphics, Baking, Subscenes, Physics (Unity Physics for Entities). Hybrid approach: XRI + UI on GameObjects, heavy simulation in DOTS.\nOther: Addressables, TextMeshPro, Localization, Unity Profiler + Frame Timing, RenderDoc (PC), OVR utilities for device.\n\n4. High-Level Architecture (Hybrid DOTS)\ngraph TD\n  GO[GameObject Side] --&gt;|Bridge| BR[Message Bridge]\n  BR --&gt; ECS[DOTS Simulation]\n  subgraph GameObjects\n    GO1[XRI rigs]\n    GO2[Canvases/UI]\n    GO3[Audio sources]\n    GO4[Scene bootstraps]\n  end\n  subgraph DOTS\n    ECS1[Machines]\n    ECS2[Hazards]\n    ECS3[Scoring]\n    ECS4[Telemetry]\n  end\n\n\nSubscenes: Environments, drill targets, path nodes, hazard volumes baked to Entities.\nData: ScriptableObjects (Scenario, ScoringWeights, HazardProfiles) baked to BlobAssets.\nMessage bridge: thin event layer to translate XRI interaction to ECS commands.\n\n5. Core Systems (DOTS-first)\n\nPPE Validation System\n\nComponents: PPEState, PPERequirement, HandPresenceTag.\nSystems: milestone checks, raise PenaltyEvent if missing; GO feedback.\n\n\nDrilling Simulation\n\nComponents: DrillArm, DrillBit, DrillSpot, RockHardness, CoolantState, OverheatState.\nSystems: angle/pressure ‚Üí bite-rate; heat; dust; events DrillProgressEvent, DrillMistakeEvent.\n\n\nWater Logging &amp; Pump\n\nComponents: WaterVolumeProxy, Pump, HoseLink, PowerState.\nSystems: water-rise; pump throughput; thresholds; audio cues.\n\n\nVehicles (Forklift, Mine Car, Rail Cart)\n\nComponents: Vehicle, WheelColliderProxy or DOTS physics, DriverInput, LoadCarrier.\nSystems: traction, tilt, load COM checks; CollisionPenaltySystem.\n\n\nHazard Manager\n\nComponents: HazardSeed, SpawnSchedule, GasZone, RoofInstability, TrafficRoute.\nSystems: weighted spawns with cooldowns; gas spikes; roof warning ‚Üí collapse if neglected.\n\n\nScoring &amp; Penalties\n\nComponents: ScoreAccumulator, PenaltyEvent, BonusEvent.\nSystems: aggregate per trainee; compute grade; emit breakdown payload.\n\n\nTelemetry\n\nComponents: TelemetryBuffer, EventTag.\nSystems: ring buffer of key events and metrics; optional upload when connected.\n\n\n\n6. Gameplay Modules\n\nM0 Controls &amp; PPE: Tutorial, calibration, PPE donning.\nM1 Drilling L1: Basic angle/pressure; 3‚Äì5 drill spots.\nM2 Drilling L2: Sequenced spots, coolant/water feed.\nM3 Drilling L3: Hazards active, tool wear, error recovery.\nM4 Water Logging: Rising water mitigated via pumps and hose setup.\nM5 Forklift Ops: Pick, transport, stack pallets/containers; traffic hazards.\nM6 Rail Cart Ride: Orientation transit (comfort cockpit frame, 60‚Äì120 s).\nM7 Blasting Prep: Layout, dummy charges, cable run, standoff verification.\nM8 Longwall/Continuous Miner Overview: Remote operation basics.\nM9 Material Handling: Joy loader ‚Üí conveyor ‚Üí shuttle car.\n\n7. Loop &amp; Progression\nBriefing ‚Üí PPE ‚Üí Checklist ‚Üí Execute ‚Üí Randomized hazard(s) ‚Üí Debrief/Coaching ‚Üí Advance or Remediate.\nCanonical flows/specs: Gameplay Spec ‚Ä¢ Mechanics Spec ‚Ä¢ User Journey Flow ‚Ä¢ Design Experience.\nGrades: A ‚â•90, B 80‚Äì89, C 70‚Äì79, D &lt;70. Bronze/Silver/Gold ‚Üí C/B/A.\n8. Scoring Spec (configurable)\n\nPositives: drilling +200; correct pump +50; forklift placement +100; completion +500.\nNegatives: collision -50/100; off-angle drill -50; wrong position -50; missing PPE -100; unsafe proximity -150.\nMultipliers: Full-PPE +10%; No-collision run +10%.\nStored per run; leaderboard optional.\n\n9. UX &amp; UI\n\nWorld-space panels 1‚Äì2 m; 14‚Äì18 pt @1 m. Large toggles/knobs.\nMinimal HUD; timer/score only during drills. Radio/tannoy VO; Hindi first, EN second.\nAudio ducking: VO sidechain reduces ambience/equipment by 6‚Äì9 dB.\nAccessibility: handedness, height calibration, seated reach assist, subtitles, color-safe palette.\n\n10. Content &amp; Assets\n\nEnvironments: modular tunnel kits, junctions, loading bay, pump room, water zones.\nMachines: continuous miner, forklift, rail cart, pumps, joy loader, shuttle car.\nProps: PPE, gas meter, signage, support props, pallets/containers.\nVFX: dust, debris, water spray, warning strobes, vignette.\n\n11. Performance Targets (Quest 3)\n\nGPU budgets: 13.3 ms@75, 11.1 ms@90, 8.3 ms@120. CPU main-thread &lt; 6 ms.\nDraw calls ‚â§1.2k; visible tris 1.5‚Äì2.5M; minimal transparencies; single-pass instanced stereo.\nDOTS: Burst on hot paths; ISystem; zero GC alloc per frame; Jobs for physics and queries.\n\n12. DOTS Data Model (examples)\n// Components (subset)\nDrillArm { float3 localAxis; float pressure; float angle; }\nDrillBit { float wear; float heat; }\nDrillSpot { float hardness; float progress; float3 normal; }\nCoolantState { float flowRate; }\nOverheatState { float heat; float cooldown; }\n \nVehicle { float maxSpeed; float accel; float brake; }\nLoadCarrier { float3 loadCOM; float loadMass; }\n \nHazardSeed { uint seed; float cooldown; }\nGasZone { float ppm; bool alarmed; }\nRoofInstability { float risk; float timeToFail; }\n \nScoreAccumulator { int value; }\nPenaltyEvent { int delta; ushort code; }\nBonusEvent { int delta; ushort code; }\n13. Testing &amp; Validation\n\nHeuristics: VR comfort checklist; interaction affordance passes.\nPlaytests at milestones with SSQ + NASA-TLX.\nAutomated perf capture: FPS histogram, CPU/GPU frame-time, entity counts; regression gates per build.\n\n14. Build &amp; CI\n\nBuild flavors: Quest Debug, Quest Release, PCVR Dev.\nCI: bake subscenes ‚Üí Addressables build ‚Üí Quest AAB ‚Üí sideload.\nPerf gate: meet target Hz with ‚â•10% margin in stress scene.\n\n15. 90-Day Schedule (Week-by-Week)\ngantt\n    title 90-Day Schedule\n    dateFormat  YYYY-MM-DD\n    section Bootstrapping\n    W1-W2:active, 2025-09-08, 14d\n    section Drilling\n    W3-W4: 2025-09-22, 14d\n    section Mid Modules\n    W5-W8: 2025-10-06, 28d\n    section Finalization\n    W9-W12: 2025-11-03, 28d\n\n\nSee Roadmap W1 for granular tasks.\n\n15b. Post-90 Polish Phase\n\nPerformance pass 2 (GPU/CPU), memory trimming\nAudio/visual polish; localization QA; accessibility refinements\nExtended validation and trainer materials\n\nSee 90-Day Build Plan + Post-90 Polish.\n16. Milestone DoD (each module)\n\nPlayable start‚Üíend; all objectives tracked; hazards seed-reproducible.\nGrade computed; scoring breakdown accurate; telemetry recorded.\nSubtitles and Hindi VO present; accessibility verified.\nQuest 3 frame-time within budget in stress case.\n\n17. Risks &amp; Mitigations\n\nMotion sickness ‚Üí teleport default, stable horizons, cockpit frames, vignettes.\nDOTS complexity ‚Üí hybrid approach; author via SO ‚Üí bake to Blob; limit custom render features.\nAudio masking ‚Üí sidechain ducking; subtitle fallback.\nRealism vs safety ‚Üí no close-range blasts; indirect feedback only.\n\n18. Deliverables\n\nQuest 3 build (AAB) with 75/90/120 Hz modes.\nInstructor Guide PDF; Scenario authoring templates (SO + sample seeds).\nSource repo with CI, profiling docs, and living GDD.\n"},"70_Project_Documentation/Instructor_Guide_Template":{"slug":"70_Project_Documentation/Instructor_Guide_Template","filePath":"70_Project_Documentation/Instructor_Guide_Template.md","title":"Instructor_Guide_Template","links":[],"tags":[],"content":"Instructor Guide ‚Äî Template\nModule\n\nName:\nDuration:\nObjective:\n\nSetup\n\nRequired room space:\nHeadset &amp; controllers:\nSafety briefing outline:\n\nFlow\n\nBriefing\nPPE check\nObjectives\nScenario execution\nDebrief\n\nAssessment\n\nScoring weights:\nPass criteria:\nCommon mistakes:\n\n\nScenario Authoring ‚Äî Template (ScriptableObject)\nFields to include in SO:\n\nScenarioId (string)\nSeeds (int)\nObjectives (list)\nHazardProfiles (list)\nScoringWeights (struct)\nTimeLimit (float)\n\nAuthoring note: Bake SO ‚Üí BlobAsset for DOTS runtime."},"70_Project_Documentation/Quest3_Perf_Profiling_Checklist":{"slug":"70_Project_Documentation/Quest3_Perf_Profiling_Checklist","filePath":"70_Project_Documentation/Quest3_Perf_Profiling_Checklist.md","title":"Quest3_Perf_Profiling_Checklist","links":[],"tags":[],"content":"Quest 3 Performance &amp; Profiling Checklist\nFrame Targets\n\n72‚Äì90 Hz; GPU &lt; 11 ms@90; CPU main-thread &lt; 6 ms\n\nRendering\n\nURP: Single-Pass Instanced; FFR/DFR if compatible\nLight baking where possible; minimal real-time shadows\nLODs and occlusion culling\nASTC textures; reduce overdraw/transparency\n\nDOTS\n\nBurst enabled; Safety checks off in release\nZero GC alloc per frame; ISystem where possible\nUse FixedStepSimulationSystemGroup for physics-bound systems\n\nAudio\n\nUse mixer groups; ducking for VO; limit concurrent voices\n\nProfiling Steps\n\nPlayer build with Development + Autoconnect Profiler\nRecord 60s in target scene; capture CPU/GPU frame time\nCheck entity counts, system timings (Entities Profiler)\nGPU capture (RenderDoc, PCVR) for draw calls/overdraw\nLog metrics to TelemetryBuffer\n\nPass/Fail Gates\n\nMeets target Hz with ‚â•10% margin in stress scene\nNo frame spikes &gt; 16 ms over 1% of frames\nMemory within budget; no leaks\n"},"70_Project_Documentation/Unity_2023_Quest3_DOTS_Setup":{"slug":"70_Project_Documentation/Unity_2023_Quest3_DOTS_Setup","filePath":"70_Project_Documentation/Unity_2023_Quest3_DOTS_Setup.md","title":"Unity_2023_Quest3_DOTS_Setup","links":["70_Project_Documentation/DOTS_Migration_Plan","70_Project_Documentation/Code_Templates/README"],"tags":[],"content":"Unity 2023.3 Quest 3 + DOTS Setup\nVersions\n\nUnity 2023.3 LTS\nAndroid SDK/NDK via Hub\nMeta Quest Developer Hub (for device)\n\nPackages (minimum)\n\nOpenXR Plugin\nXR Interaction Toolkit\nXR Hands (optional)\nURP\nEntities, Entities Graphics\nUnity Physics (for Entities)\nBurst, Collections, Mathematics, Jobs\n\nSteps\n\nCreate 3D (URP) project\nEnable XR Plugin Management ‚Üí OpenXR\nAdd XR Interaction Toolkit; import default input actions\nAdd DOTS packages (Entities 1.x) and Burst\nSwitch platform to Android; set Quest 3 settings (ARM64, Vulkan, IL2CPP)\nCreate Subscene; convert environment to Entities\nInstall Meta ODH; pair headset; enable developer mode\n\nAndroid Player Settings (Quest 3)\n\nGraphics: Vulkan, Multiview stereo\nScripting Backend: IL2CPP, ARM64\nTarget framerate: 72/90\nMinimum SDK: 29+\n\nSample manifest.json block\n{\n  &quot;dependencies&quot;: {\n    &quot;com.unity.render-pipelines.universal&quot;: &quot;15.0.0&quot;,\n    &quot;com.unity.xr.openxr&quot;: &quot;1.10.0&quot;,\n    &quot;com.unity.xr.interaction.toolkit&quot;: &quot;3.1.0&quot;,\n    &quot;com.unity.entities&quot;: &quot;1.3.1&quot;,\n    &quot;com.unity.entities.graphics&quot;: &quot;1.3.1&quot;,\n    &quot;com.unity.physics&quot;: &quot;1.3.1&quot;,\n    &quot;com.unity.burst&quot;: &quot;1.8.12&quot;,\n    &quot;com.unity.collections&quot;: &quot;2.4.0&quot;,\n    &quot;com.unity.mathematics&quot;: &quot;1.3.2&quot;\n  }\n}\nLinks\n\nDOTS Migration Plan\nCode Templates\n"},"70_Project_Documentation/User_Flow_Storyline":{"slug":"70_Project_Documentation/User_Flow_Storyline","filePath":"70_Project_Documentation/User_Flow_Storyline.md","title":"User_Flow_Storyline","links":["GDD/VR_Mines_GDD","VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","80_Research_Notes/VR_Storytelling_and_Narrative_Design","70_Project_Documentation/Instructor_Guide_Template","VR_Coal_Mining_Simulator/Backlog","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1"],"tags":["flow","ux","narrative"],"content":"User Flow + Storyline ‚Äî VR Mines (SafeOps)\n\n\n                  \n                  Hubs \n                  \n                \n\n\nGDD ‚Ä¢ Drill (DOTS) ‚Ä¢ VR Storytelling ‚Ä¢ Instructor Guide\n\n\n\n1) High-Level Flow (Act Structure)\ngraph TD\r\n  A[Launch] --&gt; B[Briefing &amp; Calibration]\r\n  B --&gt; C[PPE Check]\r\n  C --&gt; D[Tutorial: Controls &amp; Safety]\r\n  D --&gt; E[Module Select]\r\n  E --&gt; F1[M1 Drilling L1]\r\n  E --&gt; F2[M2 Drilling L2]\r\n  E --&gt; F3[M3 Drilling L3]\r\n  E --&gt; F4[M4 Water Logging]\r\n  E --&gt; F5[M5 Forklift Ops]\r\n  F1 --&gt; G[Debrief]\r\n  F2 --&gt; G\r\n  F3 --&gt; G\r\n  F4 --&gt; G\r\n  F5 --&gt; G\r\n  G --&gt; H[Progress Dashboard]\r\n  H --&gt; E\n\n2) Detailed Interaction Flow (Example: M1 Drilling L1)\ngraph LR\r\n  S0((Start)) --&gt; S1[Enter Tunnel]\r\n  S1 --&gt; S2[Safety Prompt: Helmet]\r\n  S2 --&gt;|ok| S3[Approach Drill Spot]\r\n  S2 --&gt;|fail| P1[Penalty + Prompt]\r\n  S3 --&gt; S4[Grip Drill]\r\n  S4 --&gt; S5[Angle &amp; Pressure Coaching]\r\n  S5 --&gt;|good| S6[Progress Bar Builds]\r\n  S5 --&gt;|bad| P2[Warning + Haptic Feedback]\r\n  S6 --&gt; S7[Complete Spot]\r\n  S7 --&gt; S8[Move To Next]\r\n  S8 --&gt; S9((End ‚Üí Debrief))\n\n3) Hazard Flow (Procedural Boss-Level)\ngraph TD\r\n  H0[Hazard Manager] --&gt; H1[Roll Hazard Seed]\r\n  H1 --&gt;|Gas| HG[Gas Leak]\r\n  H1 --&gt;|Roof| HR[Roof Instability]\r\n  H1 --&gt;|Equip| HE[Equipment Failure]\r\n  HG --&gt; R1[Alarm + Mask Check]\r\n  HR --&gt; R2[Evac Route + Support Props]\r\n  HE --&gt; R3[Machine Stop Procedure]\r\n  R1 --&gt; D1[Score: Response Time + Safety]\r\n  R2 --&gt; D2[Score: Correct Sequence]\r\n  R3 --&gt; D3[Score: Incident Contained]\r\n  D1 --&gt; C[Debrief]\r\n  D2 --&gt; C\r\n  D3 --&gt; C\n\n4) Storyline Beats (Slice‚Äëof‚ÄëLife)\n\nOpening VO (Dispatcher): ‚ÄúShift 3, safety first. Two drills at the east face.‚Äù\nLocker Room Ritual: don PPE; minor chit‚Äëchat about last incident (tone setting)\nOn‚Äësite Brief: instructor points to hazard signage; explains objectives\nWork Phase: steady loop of tasks; ambient radio chatter makes world feel alive\nSpike: alert tone; hazard forces decision under pressure\nResolution: correct procedure leads to calm and praise; mistakes ‚Üí coaching\nDebrief: instructor highlights positives; shows heatmap of issues; proposes micro‚Äëquests\n\n5) UX States &amp; Transitions\nstateDiagram-v2\r\n  [*] --&gt; Idle\r\n  Idle --&gt; Briefing\r\n  Briefing --&gt; Calibration\r\n  Calibration --&gt; PPE\r\n  PPE --&gt; Tutorial\r\n  Tutorial --&gt; ModuleSelect\r\n  ModuleSelect --&gt; InScenario\r\n  InScenario --&gt; Hazard\r\n  Hazard --&gt; InScenario: contained\r\n  InScenario --&gt; Debrief: objectives complete\r\n  Debrief --&gt; Dashboard\r\n  Dashboard --&gt; ModuleSelect\n\n6) Feedback &amp; Scoring Surfaces\n\nIn‚Äëscenario: subtle progress bar, timer, minimal HUD\nAudio: VO guidance ducking ambience by 6‚Äì9 dB\nHaptics: graded by impact/urgency\nDebrief Dashboard: score breakdown (Efficiency/Safety/Response), badges, next micro‚Äëquests\n\n7) Data &amp; Telemetry\n\nTrack: infractions, reaction times, repeated errors, completion, comfort\nStore per run; show trends over sessions (streaks, improvement)\n\n8) Acceptance Criteria (per module)\n\nClear success/fail routes; recoverable errors\nSafety cues detectable ‚â§200 ms\n72‚Äì90 Hz on Quest 3 in stress case\nDebrief suggests actionable next steps\n\n9) Links\n\nGDD ‚Ä¢ Backlog ‚Ä¢ Drill System ‚Ä¢ Roadmap W1\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.md","title":"Backlog","links":[],"tags":[],"content":"Feature Backlog ‚Äî VR Coal Mining Simulator\nCore Loop (Month 1‚Äì2)\n\nDrill arm interaction (DOTS): mass, haptics, material impacts\nCoal extraction system: chunking, dust, yield\nCart/conveyor: loading, transport, unloading\nSafety gear enforcement: helmet, oxygen mask\nHazard simulation: gas leak detection, tunnel collapse cues\n\nFeedback &amp; Penalties\n\nPenalty system for drops, proximity violations, missed steps\nAlarm system: gas, structural, equipment failure\nNarration/UI panels added after core stability\n\nImmersion &amp; Comfort\n\nSpatial audio mix with clear voice vs. noise separation\nHindi/Multilingual instruction tracks\n4 levels of loading/fatigue (forced break model)\n90+ FPS target; comfort tests and load testing\n\nDOTS Migration\n\nSubScenes\n\n Create SubScenes: Menu, Level, Cave_Drill, Cave_Drill_L2, Cave_Drill_L3, Blasting, Control_Instruction, Safety_Inst\n\n\nPrefab Baking\n\n Convert drill machine, lever base/handle, pipes, coal, cave prefabs via Bakers\n\n\nAuthoring + Bakers\n\n DrillArmAuthoring ‚Üí DrillArm\n DrillSpotAuthoring ‚Üí DrillSpot\n WaterLoggingAuthoring ‚Üí WaterLogging\n VehicleAuthoring ‚Üí Vehicle\n ForkliftLiftAuthoring ‚Üí ForkliftLift\n CoalSpawnerAuthoring ‚Üí CoalSpawner\n WearZoneAuthoring ‚Üí WearZone\n\n\nECS Systems\n\n DrillArmControlSystem\n DrillProgressSystem\n WaterLeakStartSystem\n WaterLevelRaiseSystem\n WaterLevelLowerSystem\n PumpToggleSystem\n VehicleMoveSystem\n ForkliftLiftSystem\n CoalSpawnSystem\n ScoreSystem + ScoreEvent buffer\n MistakeSystem\n\n\nBridges &amp; UI\n\n HUD Score Presenter (ECS ‚Üí TMP)\n Audio Bridge (ECS events ‚Üí AudioSource)\n Particles Bridge (ECS events ‚Üí VFX/ParticleSystem)\n\n\nInput Mapping\n\n Map Input System actions ‚Üí ECS input components (XR axes/buttons)\n\n\nRendering/Shaders\n\n Audit URP materials/shaders; replace Surface Shaders\n\n\nPerformance/Content\n\n Run asset inventory; optimize top-50 imports (ASTC/ETC, Vorbis)\n\n\nValidation\n\n Parity tests for drilling, water logging, XR interactions\n Frame time budget met (72/90 Hz)\n\n\n\nValidation\n\nUsability playtests with lab peers\nMetrics: success rate, safety score, comfort, learning curve\n\nMonth 3 ‚Äî Polish &amp; Rollout\n\n Performance hardening on Quest (GPU overdraw, SRP batcher, lightmaps)\n Comfort modes (snap/continuous turn, vignette, seated/standing)\n Accessibility (color-safe UI, scale text, audio captions toggle)\n Instructor Mode (pause/rewind, spawn hazards, override results)\n Debrief Dashboard (per-event timeline, mistakes breakdown, grade)\n Analytics hooks (anonymized events; opt-in; local export)\n Localization scaffolding (en, hi) for UI and narration keys\n Save/Load session summaries (JSON) for training records\n Build &amp; CI: cloud build profile, SubScene bake verification step\n Bug bash &amp; triage (stability, null refs, race conditions)\n Documentation polish (authoring‚Üícomponent map, admin handbook)\n Public notes update in Publish/ (no sensitive data)\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook.md","title":"DOTS_Migration_Runbook","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization","70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","Features/Drill_System_DOTS"],"tags":["runbook","dots","ecs","workflow"],"content":"DOTS Migration Runbook\n\nDaily workflow to move from MonoBehaviours to Entities. References external checklist and local analysis.\n\nReference\n\nExternal checklist (Windows path): c:\\Users\\ADMIN\\Documents\\GitHub\\VR-Mines-New-Project\\Assets\\artifacts\\DOTS_Conversion_Checklist.md\nLocal context: Systems Analysis, External Overview Utilization, Overview (Condensed)\n\nQuick Flow (Mermaid)\ngraph TD\n  Inventory[Run Asset Inventory] --&gt; Triage[Triage &amp; Backlog]\n  Triage --&gt; Authoring[Bakers + Authoring]\n  Authoring --&gt; Systems[ECS Systems]\n  Systems --&gt; SubScenes[SubScenes &amp; Entity Prefabs]\n  SubScenes --&gt; Bridges[UI/Audio/Particles Bridges]\n  Bridges --&gt; Validate[Parity &amp; Performance]\n\nDaily Steps\n\nInventory &amp; Triage\n\nRun artifacts/gen_inventory.ps1 in the Unity repo.\nOpen Assets_Inventory.md; add top findings to Backlog.\n\n\nAuthoring + Bakers\n\nCreate Authoring components per external checklist (DrillArm, DrillSpot, WaterLogging, Vehicle, ForkliftLift, CoalSpawner, WearZone).\nAdd Bakers producing IComponentData.\n\n\nSystems\n\nImplement: DrillArmControlSystem, DrillProgressSystem, WaterLeakStartSystem, WaterLevelRaiseSystem, WaterLevelLowerSystem, PumpToggleSystem, VehicleMoveSystem, ForkliftLiftSystem, CoalSpawnSystem, ScoreSystem, MistakeSystem.\n\n\nSubScenes &amp; Prefabs\n\nCreate SubScenes for each listed scene; bake entity prefabs.\n\n\nBridges\n\nHUD score presenter, audio bridge, particles bridge.\n\n\nValidation\n\nParity checks (drilling, water logging, XR interactions); performance budget.\n\n\n\nChecklists (copied from external, condensed)\n\nSubScenes: Menu, Level, Cave_Drill/L2/L3, Blasting, Control_Instruction, Safety_Inst\nPrefab Baking: drill machine, levers, pipes, coal, cave\nAuthoring Components: DrillArm, DrillSpot, WaterLogging, Vehicle, ForkliftLift, CoalSpawner, WearZone\nSystems: listed in Daily Steps\nData Components: DrillArm, DrillSpot, WaterLogging, Vehicle, ForkliftLift, Liftable, Score (+ScoreEvent), Mistakes\nBridges: HUD, Audio, Particles\nInput: map actions ‚Üí ECS components (XR axes/buttons)\nRendering/Shaders: URP audit; replace Surface Shaders\nPerformance: run inventory; optimize imports (ASTC/ETC, Vorbis)\nValidation: behaviour parity; VR interaction parity; frame time\n\nNext Actions\n\nCreate tasks in Backlog per module and link to features (e.g., Drill System (DOTS)).\nUpdate Systems Analysis matrices as you complete conversions.\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines.md","title":"Design_Experience_Guidelines","links":["80_Research_Notes/Game_Design_Fundamentals_Bible","70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","INDEX"],"tags":["ux","design","guidelines"],"content":"Design Experience Guidelines\nLinks: Game Design Fundamentals ‚Äî Bible, Gameplay Spec, User Journey Flow\nDesign Principles\n\nMeaningful choices over busywork; align mechanics with learning goals.\nTeach-first onboarding; defer edge cases.\nClarity: visible costs, timers, and hazard states.\n\nFlow &amp; Pacing\n\nKeep decisions within skill band; use soft hints and catch-up valves.\n\nFeedback &amp; Aesthetics\n\nCombine audio, haptics, visual cues; immediate feedback for safety actions; positive reinforcement for proactive behavior.\n\nAccessibility Standards\n\nComfort options, readable UI, color-safe palette, left/right-hand parity, standing/seated.\n\nRulebook &amp; Aids\n\nMaintain in-VR reference: objectives, turn summary, icon legend, scoring.\n\nEvaluation &amp; Playtesting\n\nBlind tests for rule clarity; metrics on confusion points; iterate per protocol in the Bible.\n\nDiagram ‚Äî Experience Stack\ngraph TD\r\n  Goals[Learning &amp; Safety Goals]\r\n  Goals --&gt; Mechanics\r\n  Mechanics --&gt; Dynamics\r\n  Dynamics --&gt; Aesthetics[Player Experience]\r\n  Aesthetics --&gt; Assessment[Telemetry &amp; Debrief]\r\n  Assessment --&gt; Iterate[Iterate]\n\nBacklinks: Simulator Index"},"70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization.md","title":"External_Overview_Utilization","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","Features/Drill_System_DOTS","DOTS_Migration_Plan","XR_to_DOTS_Bridge_Plan"],"tags":["docs","migration","assets","DOTS"],"content":"External Overview and Utilization Plan\n\nReference and apply the detailed architecture, systems, scenes, gameplay, scoring, user flow, and DOTS plan authored in the OOP project repo.\n\nSource Document\n\nWindows path: c:\\Users\\ADMIN\\Documents\\GitHub\\VR-Mines-New-Project\\Assets\\artifacts\\Project_Overview_and_DOTS_Migration.md\nContains: architecture, scenes, gameplay, scoring; storyline and user flow; DOTS migration guidance (reuse/refactor/bakers/systems); full PowerShell asset-inventory script and run steps.\n\nHow to Use It in This Project\n\nAsset reuse planning\n\nRun the inventory script (below) to produce Assets_Inventory.csv and Assets_Inventory.md.\nTriage by size and reuse category; prioritize converting large Prefabs/Scenes first.\n\n\nDOTS port sequencing\n\nFollow the per-system suggestions to define Authoring+Bakers and ECS Systems for: Drill, DrillSpot progression, WaterLogging, Vehicles, PPE, Scoring.\nMirror scene content into SubScenes and bake entity prefabs.\n\n\nDocumentation linkage\n\nKeep this note as the bridge; results should be summarized in Systems Analysis and tasks tracked in Backlog.\n\n\n\nRun the Asset Inventory (PowerShell)\npowershell -NoProfile -ExecutionPolicy Bypass -File artifacts\\gen_inventory.ps1\nExpected outputs:\n\nartifacts/Assets_Inventory.csv\nartifacts/Assets_Inventory.md\n\nTriage Workflow (Actionable)\n\nOpen Assets_Inventory.md ‚Üí review ‚ÄúTop 50 Largest‚Äù and ‚ÄúSummary by Reuse Category‚Äù.\nCreate entries in Backlog:\n\n‚ÄúConvert Prefabs to Authoring+Bakers‚Äù for top-10 size prefabs.\n‚ÄúCreate SubScenes for Cave_Drill and Blasting‚Äù.\n‚ÄúUnify ScoreSystem (ECS) and HUD presenter bridge‚Äù.\n\n\nFor each high-impact item, link to a corresponding feature doc (e.g., Drill System (DOTS)).\nUpdate Systems Analysis table with any newly discovered dependencies from CSV.\n\nIntegration Diagram (where this fits)\ngraph TD\r\n  ExternalDoc[External Overview (OOP repo)] --&gt; ThisNote[External Overview Utilization]\r\n  ThisNote --&gt; Inventory[Run Asset Inventory]\r\n  Inventory --&gt; Findings[CSV/MD Findings]\r\n  Findings --&gt; Backlog[[Backlog Items]]\r\n  Findings --&gt; Analysis[[Systems Analysis Updates]]\r\n  Backlog --&gt; Features[Feature Docs]\r\n  Features --&gt; DOTS[DOTS Systems/Bakers]\n\nQuick Links\n\nSystems Analysis\nDrill System (DOTS)\nDOTS Migration Plan\nXR ‚Üí DOTS Bridge Plan\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS.md","title":"Drill_System_DOTS","links":[],"tags":["feature","ecs","drill"],"content":"Drill System (DOTS/ECS)\nPurpose (Training Experience Goal)\n\nTeach safe and efficient drilling operations using a data-oriented, performant implementation suitable for Quest 3.\n\nArchitecture\ngraph LR\n  XR[XR Input] --&gt; I[DrillInputSystem]\n  I --&gt; M[DrillMotionSystem]\n  M --&gt; C[DrillCollisionSystem]\n  C --&gt; F[Feedback: Haptic/Audio/Particles]\n  C --&gt; S[DrillScoringSystem]\n\nImplementation (Unity DOTS)\n\nPackages: Entities, Entities.Graphics, Unity Physics, Collections, Mathematics\nAuthoring: Baker converts existing drill prefab to entities (subscene)\nComponents (IComponentData):\n\nDrillTag, DrillHead, DrillInput, DrillState, ImpactMaterial\n\n\nSystems:\n\nDrillInputSystem ‚Äî reads XR input ‚Üí DrillInput\nDrillMotionSystem ‚Äî applies torque/position based on DrillInput\nDrillCollisionSystem ‚Äî detects hits, spawns particles/audio events\nDrillScoringSystem ‚Äî updates performance metrics\n\n\nData Flow: Input ‚Üí Motion ‚Üí Collision ‚Üí Feedback ‚Üí Scoring\n\nImmersion Factors\n\nHaptics: strength mapped to torque and material density\nSpatial audio: impact type, distance attenuation, reverb zone\nVisual: particles, decals; URP-friendly effects\nComfort: capped angular velocity; camera-stable feedback cues\n\nValidation\n\nBenchmarks on Quest 3: 72+ FPS target\nUser tests: task success, error rate, comfort score\nTelemetry: torque variance, contact time, overshoot incidents\n\nFuture Enhancements\n\nMaterial-specific drill bits and wear\nInstructor ghosting/replay\nAdaptive difficulty using performance trends\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec.md","title":"Gameplay_Spec","links":["80_Research_Notes/Game_Design_Fundamentals_Bible","70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines","INDEX"],"tags":["design","gameplay","spec"],"content":"Gameplay Specification\nLinks: Game Design Fundamentals ‚Äî Bible, Mechanics Spec, User Journey Flow, Design Experience Guidelines, Simulator Index\nPurpose\nDefine how the simulator plays from moment to moment: objectives, core loop, turn/phase structure, win/fail conditions, pacing, and content envelopes.\nObjective\n\nPrimary: complete assigned mining operations safely and efficiently while learning key procedures.\nSecondary: maintain safety score, minimize hazards, and achieve scenario-specific KPIs.\n\nCore Loop\n\nPerceive environment and goals ‚Üí 2) Decide action(s) using tools/equipment ‚Üí 3) Execute with XR inputs ‚Üí 4) Receive feedback (score, hazards, narration) ‚Üí 5) Advance scenario state.\n\ngraph TD\r\n  Sense[Perceive] --&gt; Decide\r\n  Decide --&gt; Act[Execute]\r\n  Act --&gt; Feedback\r\n  Feedback --&gt; Progress\r\n  Progress --&gt; Sense\n\nPhases (Scenario)\n\nBriefing ‚Üí Preparation ‚Üí Operation ‚Üí Debrief.\n\nBriefing\n\nObjectives, environment overview, PPE check, tool tutorial.\n\nPreparation\n\nPath planning, hazard review, equipment readiness checks.\n\nOperation (Moment-to-Moment)\n\nNavigate ‚Üí Inspect ‚Üí Drill/Handle equipment ‚Üí Manage hazards ‚Üí Communicate.\n\nDebrief\n\nPresent metrics: safety compliance, time, resource usage, incidents; reflective prompts.\n\nTurn/Timing Model\n\nReal-time with micro-windows for critical decisions; optional timers for AP mitigation in training modules.\n\nScoring &amp; Progression\n\nPoints from tasks done safely, penalties for violations, bonuses for proactive hazard mitigation.\nTransparent conversion and periodic summaries per the Bible‚Äôs clarity rules.\n\nDifficulty &amp; Flow\n\nDynamic assist: hints, slower hazards early; unlock advanced rules gradually.\n\nContent Envelopes\n\nScenario tags: learning-goal, hazard-type, equipment, complexity tier.\n\nConflict &amp; Resolution\n\nDeterministic priority where possible; random elements only for uncertainty; tie-breakers via momentum-style deterministic checks when applicable.\n\nAccessibility\n\nSubtitles, color-blind palette, large interactables, reduced dexterity modes.\n\nBacklinks: Simulator Index"},"70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX.md","title":"INDEX","links":["Features/Drill_System_DOTS","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization","70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","DOTS_Migration_Plan","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","Meetings/README","Meetings/2025-09-11_Minutes","Unity_2023_Quest3_DOTS_Setup","Quest3_Perf_Profiling_Checklist","Instructor_Guide_Template","70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines"],"tags":[],"content":"VR Coal Mining Simulator ‚Äî Index\nFeatures\n\nDrill System (DOTS)\n\nAnalysis\n\nSystems Analysis (Scenes, Systems, Flow, Scoring)\nExternal Overview Utilization (DOTS plan + inventory)\nOverview (Condensed from external)\n\nRunbooks\n\nDOTS Migration Runbook\n\nPlanning\n\nDOTS Migration Plan\nBacklog\nKanban Board\n\nMeetings\n\nMeetings Overview\nMinutes ‚Äî 2025-09-11\n\nGuides\n\nUnity 2023 Quest 3 + DOTS Setup\nQuest 3 Perf &amp; Profiling Checklist\nInstructor Guide &amp; Scenario Template\n\nSpecs\n\nGameplay Spec\nMechanics Spec\nUser Journey Flow\nDesign Experience Guidelines\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec.md","title":"Mechanics_Spec","links":["80_Research_Notes/Game_Design_Fundamentals_Bible","70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","INDEX"],"tags":["design","mechanics","systems"],"content":"Mechanics Specification\nLinks: Game Design Fundamentals ‚Äî Bible, Gameplay Spec, User Journey Flow\nComponents\n\nPlayer avatar, PPE items, tools (drill, detectors), environment zones (safe, hazard, friction), resources (time/energy), score trackers.\n\nCore Verbs\n\nMove, Inspect, Equip, Drill, Report, Place/Remove obstacle, Communicate, Acknowledge prompts.\n\nSystems\n1. Hazard Manager\n\nSpawns hazards per scenario; exposes detection cues; supports mitigation actions.\n\n2. Equipment System\n\nState: ready, degraded, unsafe; maintenance checks gate operation.\n\n3. Resource Economy\n\nTime and energy as primary currencies; sinks through actions; regeneration via safe stations.\n\n4. Rule-Change Events\n\nTemporary modifiers to movement, tool efficiency, or detection noise.\n\nInformation Model\n\nPublic: environment markers, timers, team status.\nPrivate: inspection results until shared.\n\nConflict Resolution\n\nPriority ‚Üí modifiers ‚Üí randomness; deterministic tie-breakers when values equal (e.g., momentum analogue).\n\nBalancing Hooks\n\nTunables: hazard frequency, detection accuracy, action costs, penalty scales, bonus thresholds.\n\nTags for Content\n\nhazard-type, equipment, learning-goal, complexity-tier, interaction-level.\n\nExample RPS+ Graph\ngraph TD\r\n  PPE --&gt; HazardMinor\r\n  Detector --&gt; Gas\r\n  DrillSkill --&gt; Rock\r\n  Rock --&gt; BitWear\r\n  Gas --&gt; Shutdown\n\nBacklinks: Simulator Index"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes.md","title":"2025-09-11_Minutes","links":[],"tags":[],"content":"Meeting Minutes ‚Äî 2025-09-11\nAttendees\n\nProf. (PI)\nPrabhakar Deep Tirkey\n\nContext\n\nNotes captured in red ink; focus on experience-first delivery and safety simulation.\n\nDecisions\n\nImmersion quality is the primary acceptance criterion for features\nPrioritize core loop: tool handling ‚Üí extraction ‚Üí transport ‚Üí safety checks\nNarration and feedback will be added after core loop is stable\n\nAction Items\n\nImplement penalty system for unsafe actions (drops, proximity issues)\nIntegrate alarms for hazards (gas detection, collapse cues)\nRemove explosion-by-proximity; replace with graded consequences\nAdd Hindi audio (multilingual) for instructions where possible\nDesign 4 levels of loading and fatigue (forced break model)\nPrepare load testing plan and comfort tests\n\nRisks / Notes\n\nVoice and noise are getting mixed ‚Äî redesign audio bus routing\nKeep UI minimal; rely on spatial cues and audio prompts\n\nNext Checkpoint\n\nMid-week demo with DOTS-based drill loop + preliminary penalty feedback\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/README":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/README","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/README.md","title":"README","links":[],"tags":[],"content":"Meetings\nThis folder stores formalized minutes derived from red-pen meeting notes.\n\n2025-09-11 ‚Äî Experience-first delivery; hazards and penalties prioritization\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed.md","title":"Overview_Condensed","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","DOTS_Migration_Plan","XR_to_DOTS_Bridge_Plan"],"tags":["overview","systems","scenes","scoring","DOTS"],"content":"VR Mines ‚Äî Condensed Overview\n\nSummary adapted from the external overview for local reference. See External Overview Utilization for the full source and inventory workflow.\n\nPurpose\n\nVR mining training simulator covering PPE, driving, drilling, blasting, and water-logging mitigation with guided audio/UI and scoring.\n\nArchitecture &amp; Stacks\n\nUnity + XR Interaction Toolkit; OpenXR + Oculus; URP; Input System; TextMeshPro.\nState: Scene1ScoreManager (per-scene), GlobalScoreManager (cross-scene), GlobalLevelResult (final).\n\nKey Systems\n\nDrilling: DrillArmController, DrillSpot (progress/timers), FX and audio.\nWater Logging: WaterLogging leak ‚Üí pump ‚Üí lower water ‚Üí bonus.\nVehicles: CarController; ForkControllerHoldInput (lift/attach, audio).\nSafety/Training: ClothingWearZone; TrainingFlowManager audio-driven.\nScoring/UI: Scene1ScoreManager events and grade; global tally; popups/HUD.\nFlow/UX: RestartScene, Instruction triggers.\n\nScenes\n\nMenu_Scene; Level_Scene; Cave_Drill / L2 / L3; Blasting_Scene; Control_Instruction_scene; Safety_Inst_scene; loginPage.\n\nGameplay &amp; Scoring Highlights\n\nPositive: drill +200; pump on +50; water decrease +2/2s; final +500; blasting +50/socket.\nNegative: obstacle -50; wall -100; abort -50; wrong drill -50.\nGrade thresholds O/A/B/C/D; mistakes tracked in GlobalLevelResult.\n\nUser Flow\nLaunch ‚Üí Menu ‚Üí (Controls, Safety) ‚Üí Level Select ‚Üí Drill module (PPE‚Üídrive‚Üídrill‚Üíwater logging‚Üíscore) or Blasting ‚Üí Results ‚Üí Menu.\nDOTS Migration (Essentials)\n\nAssets: reuse models/textures/materials/animations/audio/shaders (check URP); convert prefabs/scenes; refactor scripts.\nAuthoring+Bakers: drill arm, drill spot, water logging, vehicles, forklift, coal spawner.\nSystems: DrillingSystem, WaterLevelSystem, PumpInteractionSystem, VehicleControlSystem, PPEWearSystem, unified ScoreSystem with ScoreEvent buffers.\nSubScenes: split static vs dynamic; bake entity prefabs.\nUI Bridge: HUD reads ECS singleton/buffers; audio via one-shot/looping component state.\n\nOverview Diagram\ngraph TD\r\n  XRInput --&gt; Drilling\r\n  XRInput --&gt; Vehicles\r\n  Drilling --&gt; Scoring\r\n  WaterLogging --&gt; Scoring\r\n  Blasting --&gt; Scoring\r\n  PPE --&gt; TrainingFlow\r\n  TrainingFlow --&gt; Player\r\n  Scoring --&gt; Results\n\nLinks\n\nSystems Analysis ‚Ä¢ External Overview Utilization ‚Ä¢ DOTS Migration Plan ‚Ä¢ XR ‚Üí DOTS Bridge Plan\n"},"70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis.md","title":"Systems_Analysis","links":["70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/Mechanics_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines","XR_to_DOTS_Bridge_Plan","INDEX","DOTS_Migration_Plan","User_Flow_Storyline","GDD/VR_Mines_GDD","Project_Directory_Index","00_Home/MOC_VR_Mines"],"tags":["analysis","systems","scenes","gameplay","scoring","XR","DOTS"],"content":"VR Coal Mining Simulator ‚Äî Systems Analysis\n\nConsolidated deep-dive of scenes, systems, gameplay mechanics, scoring, storyline, and end-to-end flow. DOTS migration notes included. For detailed specs see: Gameplay Spec ‚Ä¢ Mechanics Spec ‚Ä¢ User Journey Flow ‚Ä¢ Design Experience Guidelines.\n\nPurpose\n\nProvide a clear map of how current OOP systems interact and what carries over to DOTS.\nIdentify reusable assets, refactor targets, and flow dependencies.\n\nScene Overview\n\nMenu_Scene: main entry, navigation to modules.\nLevel_Scene: module/level selection.\nCave_Drill / Cave_Drill_L2 / Cave_Drill_L3: drilling scenarios, water logging integration.\nBlasting_Scene: explosive prep and execution.\nControl_Instruction_scene: control guidance.\nSafety_Inst_scene: PPE training.\nloginPage: basic login UI.\nSampleScene: unused/scratch.\n\nCore Systems\n\nDrilling: DrillArmController, DrillSpot, particles/audio/UI.\nWater Logging: WaterLogging leak‚Üíraise‚Üípump‚Üílower loop.\nVehicles: CarController, EnterCar, VehicleEntryManager, ForkControllerHoldInput.\nScoring: Scene1ScoreManager, GlobalScoreManager, GlobalLevelResult.\nPPE/Safety: ClothingWearZone, WearGear, GloveWearHandler.\nTraining Flow: TrainingFlowManager (audio-guided steps).\nUX/Flow: RestartScene, Instructions, pause, performance HUD.\nContent: caves, levers, drill machine, coal assets, URP lighting assets.\n\nXR &amp; Input Stack\n\nOpenXR + Oculus (see XR/XRGeneralSettingsPerBuildTarget.asset).\nXR Interaction Toolkit for grabs/interactions.\nInput System actions (InputSystem_Actions.inputactions) for Player/UI incl. XR bindings.\n\nGameplay Mechanics\n\nHigh-level summary below; full rules and tunables in Mechanics Spec.\n\nDrill arm control: smooth axis mapping with clamps; audio cues on mode changes.\nDrill spots and progression: collider-driven progress, UI slider, score updates, level counters.\nWater logging: delayed leak, rising water, pump toggle, lowering coroutine, audio fades, scoring bonuses.\nVehicles: car Rigidbody control; forklift lift/attach with navigation aids.\nPPE: zone-detected wear states, integration with training steps.\nCoal handling: randomized coal heap spawning.\n\n\n\nScoring Model\n\nSee Gameplay Spec for scoring clarity and progression rules.\nEvents: collisions (-50/-100), drill success (+200), abort (-50), wrong drill (-50), pump on (+50), water decreasing (+2/2s), final bonus (+500), blasting sockets (+50 each), blast button (+config).\nPer-scene manager handles HUD/audio; GlobalLevelResult captures totals, mistakes, grade.\n\nUser Storyline &amp; Flow\nRefer to User Journey Flow for the canonical onboarding and assessment path.\n\nWelcome + instructions ‚Üí PPE wear ‚Üí explore ‚Üí proceed to mine.\nOperate vehicle(s) to site.\nDrill designated spots; handle water logging emergency via pump.\nBlasting preparation and execution.\nResults packaged and returned to menu; repeat modules.\n\nSystem Interaction Diagram\ngraph TD\n  Player --&gt;|XR Input| DrillArmController\n  DrillArmController --&gt; DrillSpot\n  DrillSpot --&gt;|Progress/Events| Scene1ScoreManager\n  WaterLeak --&gt;|Trigger| WaterLogging\n  WaterLogging --&gt;|Pump Toggle| Scene1ScoreManager\n  Scene1ScoreManager --&gt; GlobalLevelResult\n  VehicleInput --&gt; CarController\n  VehicleInput --&gt; ForkControllerHoldInput\n  PPEItems --&gt; ClothingWearZone --&gt; TrainingFlowManager\n  TrainingFlowManager --&gt; Player\n\nScene ‚Üí Prefabs/Scripts Mapping (high-level)\n\nCave_Drill(+L2/L3): drill machine prefab, multiple DrillSpot triggers, WaterLogging setup, score HUD, instruction triggers.\nBlasting_Scene: blasting sockets prefabs, blast button, scoring UI.\nSafety_Inst_scene: PPE items with ClothingWearZone, narration triggers.\nControl_Instruction_scene: controller hint UI, interaction samples.\nMenu_Scene / Level_Scene: UI canvases with navigation events.\n\nScene ‚Üí Prefab/Script Matrix\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSceneKey Prefabs/ObjectsKey ScriptsUI/HUDXR/InputNotesMenu_SceneMenuCanvas, Buttons(Button onClick ‚Üí scene loaders)Main Menu UIUI Action MapEnsure SceneLoader or SceneManager usage consistentLevel_SceneLevelButtons, BackButton(onClick handlers)Level Select UIUI Action MapLinks to drilling, blasting, safety scenesCave_DrillDrillMachine, DrillSpots xN, Pump, WaterVolume, CoalHeapsDrillArmController, DrillSpot, WaterLogging, Scene1ScoreManager, InstructionsScore HUD, Progress Slider, PromptsPlayer/XR mapsIntegrates drilling + water loggingCave_Drill_L2As above (more spots)Same as Cave_DrillHUD + extra promptsSameIncreased difficulty/quantityCave_Drill_L3As above (max spots)Same as Cave_DrillHUDSameAdvanced timing/precisionBlasting_SceneChargeSockets, BlastButtonScene1ScoreManager, socket trigger scriptsSocket prompts, score popupsPlayer/XR mapsConfigurable blast scoreSafety_Inst_scenePPE: Helmet, Jacket, Gloves, BootsClothingWearZone, WearGear, GloveWearHandler, TrainingFlowManagerSafety promptsPlayer/XR mapsMust call MarkGearWornControl_Instruction_sceneControllerBoards, InteractablesInstructionsInstruction UIPlayer/XR mapsTutorialized controlsloginPageLoginCanvas(UI only)Login UIUI Action MapOptional entry\ngraph TD\n  subgraph Scenes\n    A[Menu] --&gt; B[Level Select]\n    B --&gt; C[Cave_Drill/L2/L3]\n    B --&gt; D[Blasting]\n    A --&gt; E[Control Instruction]\n    A --&gt; F[Safety Instruction]\n  end\n  C --&gt;|Drill spots| S1[Scene1ScoreManager]\n  C --&gt;|Water leak/pump| WL[WaterLogging]\n  WL --&gt; S1\n  D --&gt; S1\n  F --&gt; TF[TrainingFlowManager]\n  TF --&gt; A\n  S1 --&gt; GLR[GlobalLevelResult]\n\nPer-scene DOTS Migration Checklists\n\n\nMenu_Scene\n\nReplace onClick loaders with central SceneLoad system or stay OOP.\nEnsure UI events do not block ECS bootstrap/subscenes.\n\n\n\nLevel_Scene\n\nConvert level metadata to ScriptableObjects (data-only) or ECS config.\nWire to ECS scene streaming if using subscenes.\n\n\n\nCave_Drill / L2 / L3\n\nCreate DrillSpotAuthoring + Baker ‚Üí DrillSpotData (requiredTime, id, state).\nConvert DrillArmController input to ECS DrillInputData via XR bridge.\nImplement DrillingSystem to evaluate contact/progress and raise DrillEvent.\nAuthor WaterLoggingAuthoring + Baker ‚Üí WaterLoggingData (maxY, minY, rates).\nImplement WaterLevelSystem and PumpInteractionSystem (events ‚Üí score).\nReplace Scene1ScoreManager with ECS ScoreSystem + UI binding.\nMove audio to OneShotAudioRequest/LoopingAudioState components and systems.\n\n\n\nBlasting_Scene\n\nAuthor sockets and blast button as ECS interactables (InteractableTag, BlastConfig).\nImplement BlastingSystem publishing score events and completion flag.\nBind prompts via UI read model from ECS.\n\n\n\nSafety_Inst_scene\n\nAuthor PPE zones ‚Üí PPEZoneData (tags/types).\nImplement PPEWearSystem producing progression events for TrainingFlow.\nConvert TrainingFlowManager to data-driven step graph (BlobAsset) + system.\n\n\n\nControl_Instruction_scene\n\nKeep OOP UI or convert to ECS read-only presentation; ensure input mapping parity.\n\n\n\nVehicles (shared across scenes)\n\nBridge XR/Input ‚Üí VehicleInputData.\nAuthor physics state to ECS or keep Hybrid (Rigidbody with ECS control).\nImplement VehicleControlSystem; validate forklift attach as component state.\n\n\n\nCross-cutting\n\nEstablish ScoreEvent buffer and ScoreTotals singleton; unify grading logic.\nReplace GlobalLevelResult with ECS singleton + serialization on scene exit.\nSubscene split: static environment meshes vs dynamic ECS entities.\nReplace SceneLoader.Instance with a single loading pathway.\n\n\n\nRisks &amp; Gaps\n\nSceneLoader.Instance referenced; ensure presence or replace with SceneManager.LoadScene.\nPPE wear should call TrainingFlowManager.MarkGearWorn to advance flow.\nForklift lifting dependencies: validate partner scripts/null-checks.\nScore managers overlap; define canonical aggregation path.\nTags required: DrillTip, Liftable, PlayerVehicle, PPE tags.\n\nDOTS Migration Guidance (target state)\n\nData: Convert MonoBehaviours to Authoring + Bakers ‚Üí IComponentData (e.g., DrillSpotData, WaterLoggingData, VehicleState, PPEState).\nSystems: ECS Systems for drilling progression, water level simulation, scoring aggregation, vehicle input/physics bridges.\nSubscenes: Split scene content; author ECS-friendly subscenes for streaming.\nInput bridge: map Input System to component events (XR to DOTS bridge, see XR ‚Üí DOTS Bridge Plan).\nScoring: unify into a single ECS ScoreSystem with event components; UI reads from runtime singleton buffer.\nAudio/FX: trigger via components (OneShotAudioRequest, LoopingAudioState).\n\nImmediate Improvements (even before DOTS)\n\nReplace SceneLoader usage; centralize scene loading.\nDecouple static counters in DrillSpot ‚Üí instance state.\nConsolidate GlobalScoreManager vs Scene1ScoreManager roles.\nAdd results UI prefab decoupled from scenes.\n\nLinks\n\nSimulator Index ‚Ä¢ DOTS Migration Plan ‚Ä¢ XR ‚Üí DOTS Bridge Plan ‚Ä¢ User Flow + Storyline\nSpecs: Gameplay ‚Ä¢ Mechanics ‚Ä¢ User Journey ‚Ä¢ Design Experience\n\n\nBacklinks: GDD ‚Ä¢ Project Directory Index ‚Ä¢ MOC VR Mines"},"70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow":{"slug":"70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow","filePath":"70_Project_Documentation/VR_Coal_Mining_Simulator/User_Journey_Flow.md","title":"User_Journey_Flow","links":["80_Research_Notes/Game_Design_Fundamentals_Bible","70_Project_Documentation/VR_Coal_Mining_Simulator/Gameplay_Spec","70_Project_Documentation/VR_Coal_Mining_Simulator/Design_Experience_Guidelines","INDEX"],"tags":["ux","flow","onboarding"],"content":"User Journey Flow\nLinks: Game Design Fundamentals ‚Äî Bible, Gameplay Spec, Design Experience Guidelines\nNarrative Outline\n\nEntry ‚Üí Orientation ‚Üí Tutorialized First Task ‚Üí Free Play with Guardrails ‚Üí Assessment ‚Üí Debrief ‚Üí Next Scenario.\n\nHigh-Level Flow\ngraph TD\r\n  A[Launch] --&gt; B[Menu &amp; Profile]\r\n  B --&gt; C[Briefing]\r\n  C --&gt; D[PPE Check]\r\n  D --&gt; E[Tutorial Actions]\r\n  E --&gt; F[Operational Loop]\r\n  F --&gt; G[Assessment]\r\n  G --&gt; H[Debrief &amp; Feedback]\r\n  H --&gt; I[Next Scenario/Exit]\n\nTeaching Sequence\n\nState objective and win condition.\nDemonstrate one full turn/action loop.\nProvide reference card equivalents (HUD hints).\nReveal edge cases only when encountered.\n\nKey Touchpoints\n\nSafety prompts, hazard cues, score updates, time warnings, instructor notes.\n\nAccessibility &amp; Inclusivity\n\nSubtitles on by default, scalable UI, color-safe palettes, comfort locomotion options.\n\nTelemetry for Debrief\n\nTime to complete, violations, proactive mitigations, decision cadence, confusion events.\n\nBacklinks: Simulator Index"},"70_Project_Documentation/XR_to_DOTS_Bridge_Plan":{"slug":"70_Project_Documentation/XR_to_DOTS_Bridge_Plan","filePath":"70_Project_Documentation/XR_to_DOTS_Bridge_Plan.md","title":"XR_to_DOTS_Bridge_Plan","links":["Code_Templates/XRInput_Bridge_ECS","Code_Templates/Drill_Mining_Loop_ECS","70_Project_Documentation/DOTS_Migration_Plan"],"tags":["plan","xr","dots"],"content":"Unity XR ‚Üí DOTS Bridge Plan\nObjectives\n\nKeep XR Interaction Toolkit (XRI) + UI on GameObjects\nMove heavy simulation (drill, hazards, vehicles, scoring) into DOTS\nProvide minimal, testable bridges for inputs, events, and spawning\n\nArchitecture Overview\ngraph TD\n  XRI[XRI Hands/Controllers]\n  MB[Mono Bridge (Authoring + Update)]\n  ECS[DOTS Systems]\n  XRI --&gt; MB --&gt; ECS\n\nComponents\n\nGameObject side: XRInputAuthoring, InteractionEventAuthoring, SpawnerAuthoring\nDOTS side: XRInput (singleton), InputEvent buffer, InteractionEvent buffer, SpawnRequest buffer\n\nPatterns\n\nBuffer pattern: GO writes InputEvent/InteractionEvent into DynamicBuffers on a singleton entity\nBaker pattern: convert static config from ScriptableObjects into BlobAssets for ECS consumption\nSubscene pattern: author scenes as usual; bake to Entities for play\nSystem groups: input ‚Üí motion/logic ‚Üí collision ‚Üí feedback ‚Üí scoring\n\nData Contracts\n\nInputEvent { type: byte, value: float }\nInteractionEvent { id: ushort, data: float }\nSpawnRequest { prefab: Entity, pos: float3 }\nPenaltyEvent/BonusEvent for scoring\n\nImplementation Steps\n\nCreate XRInputAuthoring MonoBehaviour to read XRI actions\nBake singleton entity with XRInput and InputEvent buffer\nImplement XRInputBridgeSystem writing buffer entries\nImplement ECS consumers: DrillInputSystem, VehicleInputSystem\nCreate InteractionEventAuthoring for tool grabs/uses\nAdd InteractionEventBridgeSystem to feed ECS\nBuild SpawnerAuthoring + SpawnRequestSystem for ECS-driven instantiation\nValidate with drill prototype; measure latency and allocations\n\nPerformance Considerations\n\nBurst all ECS systems on hot paths\nAvoid per-frame allocations; reuse structs\nGate bridge writes to changed inputs only\nUse FixedStepSimulationSystemGroup for physics-coherent updates\n\nTesting Plan\n\nUnit tests for buffer writes/reads\nProfiler: ensure bridge overhead &lt; 0.2 ms per frame\nIntegration: drill loop + hazards with XR input ‚Üí ECS motion ‚Üí scoring\n\nRisks &amp; Mitigations\n\nInput lag: use minimal marshalling; avoid heavy work on GO side\nComplexity: strictly separate bridges vs. gameplay systems\nXR package changes: keep interfaces lean and documented\n\nReferences\n\nXR Input Bridge Template\nDrill ECS Template\nDOTS Migration Plan\n"},"80_Research_Notes/Coal_Mining_Workflow_and_Machines":{"slug":"80_Research_Notes/Coal_Mining_Workflow_and_Machines","filePath":"80_Research_Notes/Coal_Mining_Workflow_and_Machines.md","title":"Coal_Mining_Workflow_and_Machines","links":[],"tags":[],"content":"Coal Mining Workflow and Machines ‚Äî Research Summary\nWorkflow (Underground)\n\nAccess and commute (rail cart, 30‚Äì60 min)\nReach working face of the mine\nContinuous miner cuts coal at the seam (remote controlled)\nCoal scooped to conveyor ‚Üí shuttle car\nLoading/unloading system (joy loader)\nTransport to containers ‚Üí shipped via vehicle\n\nMachines and Tools (Mapped to VR Features)\n\nContinuous Miner ‚Äî Remote operation training; hazard zones\nShuttle Car ‚Äî Navigation and loading alignment\nJoy Loader ‚Äî Loading/unloading timing and safety clearances\nJCB-type Loader ‚Äî Surface loading to transport\nHand Tools ‚Äî Shovel and general handling ergonomics\n\nTraining Objectives per Stage\n\nIdentify hazard cues; maintain safe distances\nFollow correct sequence; minimize errors and drops\nTime-on-task optimization without sacrificing safety\n\nInteraction Notes\n\nTwo-handed grips with assist joints\nMaterial-dependent audio/haptics (coal vs. rock)\nPenalty feedback for unsafe handling\n\nOpen Questions\n\nWhich steps are remote vs. in-mine for a given mine type?\nLocal regulations for PPE and signage standards\n"},"80_Research_Notes/Game_Design_Fundamentals_Bible":{"slug":"80_Research_Notes/Game_Design_Fundamentals_Bible","filePath":"80_Research_Notes/Game_Design_Fundamentals_Bible.md","title":"Game_Design_Fundamentals_Bible","links":["70_Project_Documentation/Design_Brief_Game_Design_Gamification","80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","00_Home/MOC_VR_Mines","INDEX","Project_Directory_Index"],"tags":["research","game-design","fundamentals","rulebook","pedagogy"],"content":"Game Design Fundamentals ‚Äî Comprehensive Bible\n\nPurpose: Synthesize course DDL810 notes into a practical, Obsidian-friendly handbook you can design, prototype, and evaluate games with. Use as a reference while building VR training and non-VR games.\n\nLinks: Design Brief, MDA &amp; VR Principles, Gamification Frameworks, VR Immersion\n1) What Is A Game? Working Definition\n\nStructure of rules that shape activity into meaningful play.\nMultiple/Infinite possibility spaces emerge from simple rule sets; depth arises from player choices, uncertainty, and feedback.\nSecond-order design: designers specify Mechanics; players experience Aesthetics via Dynamics.\n\n2) MDA Framework (Mechanics ‚Üí Dynamics ‚Üí Aesthetics)\n\nMechanics: rules, actions, constraints, resources, information, randomness.\nDynamics: system behaviors over time (economies, bluffing, alliances, meta). Emergent.\nAesthetics: felt experience: challenge, discovery, fellowship, narrative, expression, submission, fantasy, sensation.\n\ngraph TD\r\n  Designer[Designer] --&gt; M[Mechanics]\r\n  M --&gt; D[Dynamics]\r\n  D --&gt; A[Aesthetics]\r\n  A --&gt; Player[Player Experience]\n\nDesigners tune M to influence D that evoke A. Players reason backwards from A to D/M as they learn.\n3) Core Design Process (Iterative)\n\nIdentify objectives: learning goals, fantasy/theme, target audience, constraints.\nChoose core loop + verbs: what players do each turn; how they win/lose.\nPaper prototype quickly: components, board, cards, tokens. Play within 10‚Äì30 minutes.\nPlaytest: observe confusion, decision quality, pacing; collect data.\nBalance &amp; refine: tune costs, probabilities, timing; remove complexity that doesn‚Äôt create meaningful choice.\nRulebook &amp; onboarding: teach-first experience, examples, glossary.\n\ngraph TD\r\n  Goals((Goals)) --&gt; Loop[Core Loop]\r\n  Loop --&gt; Proto[Paper Prototype]\r\n  Proto --&gt; Test[Playtest]\r\n  Test --&gt; Balance[Balance/Tune]\r\n  Balance --&gt; Teach[Rulebook/Onboarding]\r\n  Teach --&gt; Loop\n\n4) Anatomy of a Turn (Template)\n\nStart: upkeep, draw, refresh.\nAction phase: play one or more action cards; move; trade; place obstacles/resources; manipulate timers.\nResolution: apply effects, resolve conflicts (priority ‚Üí timing ‚Üí randomness ‚Üí tie-breakers).\nEnd: check win conditions; discard; pass priority.\n\nstateDiagram-v2\r\n  [*] --&gt; Start\r\n  Start --&gt; Action\r\n  Action --&gt; Resolution\r\n  Resolution --&gt; End\r\n  End --&gt; [*]\n\n5) Mechanics Toolkit (from notes)\n\nActions/Verbs: draw, play, move, exchange, steal, trash, place, trade, nudge, double-acting, reveal, block, sabotage, rule-change.\nResources: cards, energy/time, velocity/momentum, currency, wildcards.\nChance: dice, shuffled decks, hidden information; use to create uncertainty but avoid removing agency.\nConstraints: zones, friction areas, paths, timers, cooldowns, hand limits.\nInteraction: cooperation, competition, negotiation, take-that, role abilities.\nEconomy: costs, sinks, scarcity, conversion rates; ensure earn/spend loops.\nConflict Resolution: deterministic priority ‚Üí modifiers ‚Üí randomness; provide transparent tie-breakers (e.g., momentum calc).\n\n5.1 Balancing RPS+ (Extended Dominance Graph)\nExpand beyond rock‚Äìpaper‚Äìscissors to more nodes with counters. Build a directed graph; keep cycles short and readably teachable.\ngraph TD\r\n  Rock --&gt; Scissors\r\n  Scissors --&gt; Paper\r\n  Paper --&gt; Rock\r\n  Fire --&gt; Paper\r\n  Water --&gt; Fire\r\n  Ash --&gt; Water\r\n  Rock -.resists.-&gt; Fire\n\n6) Educational Game Design Notes (DDL810)\n\nCharacteristics: simpler complexity, room for experimentation, repeatability, reinforcement, social learning contexts.\nLearning goals mapping: specify knowledge/skill ‚Üí choose assessment moment inside play ‚Üí align feedback.\nScaffolding: increasing difficulty, layered challenges, clear rules, immediate feedback, safe failure.\nFlow: match challenge to skill; ramp carefully; avoid boredom/anxiety by tuning action point budgets and decision load.\n\n6.1 Physics Theme Example (Forces &amp; Motion)\n\nGoals: friction, inertia, Newton‚Äôs 2nd law, momentum, energy transfer.\nCore loop: draw ‚Üí play force/obstacle/distance cards ‚Üí move a piece on a board with friction zones/inclines ‚Üí compute quick outcomes (e.g., momentum) for tie-breakers.\nComponents: board with zones/paths, obstacle tokens, velocity trackers, timers.\nOptional role powers: engineer (ignores friction zones), physicist (convert momentum), inspector (late sabotage).\n\n7) Gamification &amp; Motivation\n\nUse game elements in non-game contexts thoughtfully. Favor meaningful choices and autonomy/competence/relatedness (Self-Determination Theory).\nOctalysis lenses: accomplishment, ownership, scarcity, unpredictability, social influence, meaning, empowerment, avoidance. Map chosen drives to mechanics.\nTrackers: progression bars, resource meters, time budgets. Avoid extrinsic-only loops that crowd out intrinsic motivation.\n\n8) Inclusivity, Accessibility, and Audience\n\nWrite for broad audiences; ensure clear language and cultural sensitivity.\nComponents: high-contrast colors, iconography, large fonts; minimize dexterity burdens.\nCognitive load: chunk rules; provide player aids and reference cards.\n\n9) Rulebook Writing Guide (from notes)\nStructure: intro, objective, setup, gameplay, scoring, supplements.\nPrinciples:\n\nCommunicate complexity by sequencing: teach core loop first; defer edge cases.\nUse 2nd-person voice; provide an example turn and FAQs.\nInclude player reference cards and strategy tips sparingly.\n\ngantt\r\n  dateFormat  YYYY-MM-DD\r\n  title Rulebook Production\r\n  section Drafting\r\n  Outline &amp; Skeleton :a1, 2025-09-16, 2d\r\n  Examples &amp; Diagrams :a2, after a1, 2d\r\n  section Testing\r\n  Blind Playtests :b1, after a2, 3d\r\n  Revisions :b2, after b1, 2d\n\n10) Deck Design &amp; Content Strategy (from sketches)\n\nExample composition target: ~100 cards across actions, events, wildcards, rule-changes; ensure duplicates for reliability and frequency balancing.\nUse tags per card for filtering during balancing: cost, tempo, interaction, learning-goal.\nFor educational decks, ensure consistent content weight across chapters/units; include strategy variety.\n\n11) Systems, Loops, and Scoring\n\nCore metric loops: earn resource ‚Üí spend on actions ‚Üí board position/advantage ‚Üí convert to points/win.\nProvide comeback valves (catch-up) without invalidating skill: soft caps, diminishing returns, temporary boosts.\nScoring clarity: public trackers; summary at end of round; transparent conversions.\n\n12) Playtesting Protocol\n\nStage 1: explore space; don‚Äôt defend rules; instrument confusion points.\nStage 2: capture data; don‚Äôt argue; ask players to restate rules; measure duration, AP, decisions per minute, dead time.\nStage 3: follow-up; prioritize changes that increase meaningful choices, reduce bookkeeping, and align with goals.\n\n13) On Chance, Choice, and Consequences\n\nUse randomness for variety and uncertainty; bound with rerolls/mitigation; surface odds.\nConsequential decisions require clear tradeoffs, timing tension, and risk/reward curves.\nEnsure each action has visible opportunity cost; avoid dominant strategies by adding counters or resource pressure.\n\n14) Worldbuilding &amp; Theme Integration\n\nTie verbs to fiction so rules feel intuitive (friction zones, ramps, inspectors, hazards).\nVisual style: consistent palette, icon language, and props; prefer readable over ornate.\n\n15) Example Onboarding Flow\ngraph TD\r\n  Teach[1. Teach objective + win condition] --&gt; Loop2[2. Demonstrate one full turn]\r\n  Loop2 --&gt; Ref[3. Hand out reference cards]\r\n  Ref --&gt; Edge[4. Cover edge cases when first encountered]\n\n16) Templates\n\nPlayer Aid (front/back): turn summary, icon legend, scoring table.\nCard Frame: title, cost, effect, timing, tags; use color + icon families.\nRule-change Cards: timing window, scope, duration; limit to avoid runaway complexity.\n\n17) Quick Checklists\n\nCore loop identifiable in 1 sentence.\nAt least 3 viable openings and no obvious dominant strategy.\nDecisions per minute appropriate for audience; downtime bounded.\nRulebook: example turn, glossary, FAQs, component list.\nEducational games: explicit learning outcomes, assessment moments, debrief prompts.\n\n18) Glossary (Selected)\n\nAP (Analysis Paralysis): overthinking delaying play; mitigate with timers/limits.\nDominant Strategy: option strictly better; fix by costs, counters, or new objectives.\nFriction Zone: board area that reduces movement; used for pacing.\nMomentum (tie-breaker): p = m¬∑v; use as deterministic resolver where fiction fits.\n\n19) References &amp; Further Reading\n\nHunicke, LeBlanc, Zubek (2004) ‚Äî MDA: A Formal Approach.\nSchell ‚Äî The Art of Game Design.\nFullerton ‚Äî Game Design Workshop.\nSalen &amp; Zimmerman ‚Äî Rules of Play.\nOctalysis ‚Äî Yu-kai Chou.\n\n\nBacklinks: MOC, Research Index, Project Directory Index"},"80_Research_Notes/Gamification_Frameworks_Octalysis_Principles":{"slug":"80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","filePath":"80_Research_Notes/Gamification_Frameworks_Octalysis_Principles.md","title":"Gamification_Frameworks_Octalysis_Principles","links":[],"tags":["research/gamification","design"],"content":"Gamification Frameworks for VR Training (Octalysis + Principles)\nOctalysis (Yu-kai Chou) ‚Äî Core Drives\n\nEpic Meaning &amp; Calling\nDevelopment &amp; Accomplishment\nEmpowerment of Creativity &amp; Feedback\nOwnership &amp; Possession\nSocial Influence &amp; Relatedness\nScarcity &amp; Impatience\nUnpredictability &amp; Curiosity\nLoss &amp; Avoidance\n\nSafeOps Mapping\n\nBadges &amp; Grades ‚Üí CD2\nScenario authoring &amp; multiple solutions ‚Üí CD3\nTeam/NPC cooperation &amp; leaderboards (local) ‚Üí CD5\nTimed drills &amp; limited oxygen ‚Üí CD6/CD8\nRandomized hazards ‚Üí CD7\nMission framing: ‚ÄúProtect your team‚Äù ‚Üí CD1\n\nDesign Principles (synthesis)\n\nGoals visible and meaningful; reward competence not grind\nProgress feedback: score breakdown, heatmaps, trend lines\nVariable ratio reinforcement cautiously; avoid compulsion loops\nSocial proof via instructor feedback and peer review\nAvoid extrinsic reward overshadowing intrinsic mastery\n\nMechanics for VR Mines\n\nAchievements: Safety First, Quick Reflexes, Team Player\nStreaks: incident-free sessions (resets on major mistake)\nSkill Trees: unlock advanced drills after safety consistency\nDebrief Dashboard: actionable coaching; next best task\n\nValidation\n\nMeasure learning transfer; not just in-session engagement\nA/B test reward framing (safety pride vs points)\n"},"80_Research_Notes/INDEX":{"slug":"80_Research_Notes/INDEX","filePath":"80_Research_Notes/INDEX.md","title":"INDEX","links":["80_Research_Notes/VR_Immersion_Factors_Training_Simulations","80_Research_Notes/Coal_Mining_Workflow_and_Machines","80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","80_Research_Notes/VR_Storytelling_and_Narrative_Design","80_Research_Notes/Game_Design_Fundamentals_Bible"],"tags":[],"content":"Research ‚Äî Index\nCore\n\nVR Immersion Factors\nCoal Mining Workflow &amp; Machines\nMDA &amp; Game Design Principles for VR\nGamification Frameworks (Octalysis + Principles)\nVR Storytelling &amp; Narrative Design\nGame Design Fundamentals ‚Äî Bible\n\nOpen Questions\n\nRemote vs in-mine tasks per mine type\nLocal regulations for PPE/signage\n"},"80_Research_Notes/MDA_and_Game_Design_Principles_for_VR":{"slug":"80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","filePath":"80_Research_Notes/MDA_and_Game_Design_Principles_for_VR.md","title":"MDA_and_Game_Design_Principles_for_VR","links":[],"tags":["research/mda","design","vr"],"content":"MDA and Game Design Principles for VR Training\nMDA Framework (Mechanics ‚Üí Dynamics ‚Üí Aesthetics)\n\nMechanics: Rules, inputs, systems (ECS drill, hazards, scoring)\nDynamics: Emergent behavior (risk‚Äìreward, time pressure, resource juggling)\nAesthetics: Player feelings: challenge, mastery, relief, responsibility, safety confidence\n\nVR-Specific Mapping\n\nMechanics: 6DoF interactions, embodied tools, spatial audio\nDynamics: Physical affordances, spatial attention, proprioceptive feedback\nAesthetics: Presence, agency, competence, calm under pressure\n\nCore Principles (synthesized)\n\nClarity of Goal: Always-visible objective + why it matters (safety)\nMeaningful Feedback: Multisensory, immediate, proportional to action\nProgression &amp; Mastery: Scaffolded modules; visible skill growth\nChallenge‚ÄìSkill Balance: Adaptive hazards; adjustable ramps\nFail Safely: Consequences without trauma; clear recovery path\nConsistency &amp; Affordances: One interaction pattern per class of tools\nJuice without Noise: Rewarding effects that support, not distract\nComfort First: Teleport defaults, stable horizons, vignette; short sessions\n\nDesign Heuristics for VR Training\n\n1m‚Äì2m readable UI; hands at natural range; no micro-aiming\nSpatialized audio for hazards; VO ducking\nHaptics: graded by mass/impact; avoid constant buzz\nTeach by doing: diegetic prompts, ghost-hands, guided grips\nCognitive load: 7¬±2 ‚Üí chunk tasks; proceduralize\n\nApplying to VR Mines\n\nMechanics: ECS drill, PPE checks, gas zones, collapses, scoring\nDynamics: Trade-offs (speed vs safety), situational awareness, triage\nAesthetics: Confidence, vigilance, teamwork pride, mastery\n\nReferences (synthesis)\n\nMDA (Hunicke, LeBlanc, Zubek)\nIndustry design principles (various sources)\n"},"80_Research_Notes/VR_Immersion_Factors_Training_Simulations":{"slug":"80_Research_Notes/VR_Immersion_Factors_Training_Simulations","filePath":"80_Research_Notes/VR_Immersion_Factors_Training_Simulations.md","title":"VR_Immersion_Factors_Training_Simulations","links":[],"tags":[],"content":"VR Immersion Factors in Training Simulations\nDefinition\nVR Immersion refers to the psychological state where users experience a sense of ‚Äúbeing there‚Äù in a virtual environment, leading to enhanced learning, retention, and behavioral change. In training simulations, immersion is crucial for creating realistic practice scenarios that transfer effectively to real-world situations.\nKey Psychological Principles\nPresence\n\nSpatial Presence: Feeling physically located in the virtual environment\nSelf-Presence: Recognition of virtual body as one‚Äôs own\nSocial Presence: Awareness of other virtual entities as social actors\nEnvironmental Presence: Feeling surrounded by the virtual world\n\nAttention\n\nSelective Attention: Focus on relevant training elements\nSustained Attention: Maintaining focus during extended training sessions\nDivided Attention: Managing multiple simultaneous tasks\nAttention Restoration: Reducing cognitive fatigue through immersive environments\n\nMemory\n\nEpisodic Memory: Creating vivid, contextual memories of training experiences\nProcedural Memory: Building muscle memory through repeated practice\nSemantic Memory: Understanding concepts through embodied experience\nWorking Memory: Managing information during complex tasks\n\nDesign Guidelines for VR\nVisual Design\n\nField of View: Maximize peripheral vision coverage\nResolution: Maintain high pixel density for detail recognition\nLighting: Use realistic lighting that matches training environment\nColor Accuracy: Ensure colors match real-world counterparts\nDepth Cues: Proper stereoscopic depth perception\n\nAudio Design\n\nSpatial Audio: 3D positioned sound sources\nAmbient Sound: Environmental audio for context\nAudio Quality: High-fidelity sound reproduction\nAudio-Visual Sync: Synchronized audio and visual events\nDynamic Range: Realistic volume variations\n\nHaptic Feedback\n\nTactile Sensation: Touch feedback for object interaction\nForce Feedback: Resistance and weight simulation\nVibration Patterns: Different patterns for different events\nTemperature: Thermal feedback where applicable\nTexture Simulation: Surface texture through haptics\n\nInteraction Design\n\nNatural Gestures: Intuitive hand and body movements\nObject Physics: Realistic object behavior and weight\nCollision Detection: Accurate spatial interaction\nTool Simulation: Realistic tool handling and feedback\nEnvironmental Interaction: Responsive virtual environment\n\nComfort Factors\n\nMotion Sickness Prevention: Smooth locomotion and camera movement\nEye Strain Reduction: Proper IPD adjustment and refresh rates\nFatigue Management: Appropriate session lengths and breaks\nErgonomic Design: Comfortable hand positioning and movement\nAccessibility: Inclusive design for diverse users\n\nApplications in Mining Safety Training\nHazard Recognition Training\n\nVisual Cues: Realistic hazard appearance and placement\nEnvironmental Context: Proper mine atmosphere and lighting\nStress Simulation: High-pressure scenarios with realistic consequences\nDecision Making: Time-critical safety decisions in immersive context\n\nEquipment Operation\n\nTool Familiarization: Realistic tool weight, balance, and handling\nProcedure Practice: Step-by-step safety protocols\nEmergency Response: Quick reaction training under pressure\nMaintenance Training: Equipment care and troubleshooting\n\nSpatial Awareness\n\nMine Layout: Navigation and orientation in complex environments\nEgress Routes: Emergency exit procedures\nEquipment Placement: Understanding spatial relationships\nTeam Coordination: Multi-user collaborative training\n\nStress Inoculation\n\nHigh-Pressure Scenarios: Training under realistic stress levels\nEmergency Situations: Gas leaks, equipment failures, collapses\nDecision Fatigue: Extended decision-making under pressure\nRecovery Training: Post-incident response procedures\n\nImplementation Strategies\nProgressive Complexity\n\nBasic Interactions: Start with simple tool handling\nComplex Scenarios: Gradually introduce multi-factor situations\nEmergency Training: High-stress, time-critical scenarios\nMastery Assessment: Advanced skill evaluation\n\nFeedback Systems\n\nImmediate Feedback: Real-time performance indicators\nDelayed Feedback: Post-session analysis and improvement\nPeer Feedback: Collaborative learning opportunities\nExpert Feedback: Professional instructor input\n\nPersonalization\n\nSkill Level Adaptation: Adjust difficulty based on performance\nLearning Style: Visual, auditory, or kinesthetic preferences\nCultural Adaptation: Local mining practices and regulations\nAccessibility: Accommodations for different abilities\n\nMeasurement and Validation\nImmersion Metrics\n\nPresence Questionnaires: Standardized presence measurement tools\nPhysiological Measures: Heart rate, skin conductance, eye tracking\nBehavioral Analysis: Movement patterns and interaction quality\nPerformance Metrics: Task completion rates and accuracy\n\nLearning Effectiveness\n\nKnowledge Retention: Long-term memory of training content\nSkill Transfer: Application to real-world situations\nBehavioral Change: Adoption of safety practices\nConfidence Building: Self-efficacy in safety procedures\n\nUser Experience\n\nComfort Assessment: Physical and psychological comfort\nEngagement Levels: Attention and motivation during training\nSatisfaction Ratings: Overall training experience quality\nRecommendation Likelihood: Willingness to use VR training\n\nResearch Gaps and Future Directions\nCurrent Limitations\n\nIndividual Differences: Varying immersion experiences across users\nLong-term Effects: Limited research on extended VR training\nCultural Factors: Cross-cultural immersion differences\nTechnology Constraints: Hardware limitations affecting immersion\n\nEmerging Technologies\n\nHaptic Suits: Full-body tactile feedback\nEye Tracking: Attention and engagement monitoring\nBrain-Computer Interfaces: Direct neural feedback\nAdvanced AI: Personalized training adaptation\n\nResearch Priorities\n\nLongitudinal Studies: Extended training effectiveness research\nCross-Industry Applications: Mining, healthcare, aviation, military\nCost-Benefit Analysis: ROI of VR training programs\nStandardization: Industry-wide immersion measurement protocols\n\nKey Takeaways\n\nImmersion is Multisensory: Effective VR training requires coordinated visual, auditory, and haptic feedback\nPresence Drives Learning: The stronger the sense of presence, the more effective the training\nIndividual Differences Matter: Personalization is crucial for optimal learning outcomes\nContext is Critical: Training scenarios must closely match real-world conditions\nMeasurement is Essential: Regular assessment ensures training effectiveness and improvement\n\n\nReferences\n\nSlater, M. (2009). Place illusion and plausibility can lead to realistic behaviour in immersive virtual environments. Philosophical Transactions of the Royal Society B.\nMakransky, G., &amp; Lilleholt, L. (2017). A structural equation modeling investigation of the emotional value of immersive virtual reality in education. Educational Technology Research and Development.\nRiva, G., et al. (2016). Affective interactions using virtual reality: The link between presence and emotions. Cyberpsychology &amp; Behavior.\n\n\nLast Updated: [Current Date]\nVersion: 1.0\nStatus: Research Summary"},"80_Research_Notes/VR_Storytelling_and_Narrative_Design":{"slug":"80_Research_Notes/VR_Storytelling_and_Narrative_Design","filePath":"80_Research_Notes/VR_Storytelling_and_Narrative_Design.md","title":"VR_Storytelling_and_Narrative_Design","links":[],"tags":["research/storytelling","design","vr"],"content":"Storytelling &amp; Narrative Design for VR Training\nWhy Narrative in Training\n\nContext ‚Üí meaning ‚Üí memory. Stories frame tasks as consequential.\nIdentity shift: trainee ‚Üí guardian of team safety.\n\nNarrative Structures\n\nMission Brief ‚Üí Field Operation ‚Üí Debrief (3-act)\nMicro-stories: hazard near-miss, equipment malfunction, teammate assist\nEnvironmental storytelling: signage, worn tools, radio chatter\n\nVR-specific Techniques\n\nDiegetic UI: clipboards, wrist panels, radios\nSpatialized VO: instructor proximity, alarms directionality\nGaze/gesture triggers; avoid forced-camera cuts\nNPC behaviors as narrative anchors (panic ‚Üí assist)\n\nPatterns for VR Mines\n\nRadio Narrative: dispatcher sets stakes; instructor guides\nTeammate Thread: NPC minor incident invites help (Team Player badge)\nDebrief Montage: replay key moments; ‚Äúwhat good looked like‚Äù clips\n\nEthics &amp; Safety\n\nNo traumatic realism; avoid explosions near player\nUse graded consequences; focus on learnable behaviors\n\nHooks &amp; Retention\n\nEpisodic modules with clear arcs; cliffhanger hazards for next session\nPersonal progress journal with instructor notes\n"},"90_Roadmap_Updates/90_Day_Master_Plan":{"slug":"90_Roadmap_Updates/90_Day_Master_Plan","filePath":"90_Roadmap_Updates/90_Day_Master_Plan.md","title":"90_Day_Master_Plan","links":["70_Project_Documentation/GDD/VR_Mines_GDD","90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","70_Project_Documentation/DOTS_Migration_Plan"],"tags":["plan","roadmap"],"content":"90-Day Build Plan + Post-90 Polish\nPhase A ‚Äî Build (Days 1‚Äì90)\n\nDay 1‚Äì14: Foundation (URP, OpenXR, XRI, Entities, Subscenes, M0 PPE)\nDay 15‚Äì28: M1 Drilling L1 (DOTS core), scoring v1, telemetry baseline\nDay 29‚Äì42: M2 Drilling L2 (coolant/heat), hazard framework stub\nDay 43‚Äì56: M3 Drilling L3 (gas spike, roof warning), Hindi VO pass 1\nDay 57‚Äì63: M4 Water Logging; pumps &amp; hoses\nDay 64‚Äì70: M5 Forklift ops; traffic/collision penalties\nDay 71‚Äì77: M6 Rail cart orientation; accessibility sweep\nDay 78‚Äì84: M7 Blasting prep; checklist tooling; localization UI\nDay 85‚Äì90: Integrate; perf pass 1; RC build; demo package\n\nPhase B ‚Äî Polish (Post Day 90)\n\nPerf pass 2 (GPU/CPU), memory trimming, hitches removal\nAudio polish: mixing, sidechain ducking, localized VO QC\nVisual polish: lighting, materials, VFX optimization\nUX polish: menu flow, debrief visuals, accessibility refinements\nContent: instructor guide finalization, scenario authoring templates\nValidation: extended playtests, SSQ/NASA‚ÄëTLX analysis\n\nDeliverables\n\nDay 90: Quest 3 build (AAB), demo video, documentation set\nPost‚Äë90: Polished build candidate; trainer materials\n\nLinks\n\nGDD ‚Ä¢ Week 1 ‚Ä¢ DOTS Plan\n"},"90_Roadmap_Updates/90_Day_Roadmap_Update_Week1":{"slug":"90_Roadmap_Updates/90_Day_Roadmap_Update_Week1","filePath":"90_Roadmap_Updates/90_Day_Roadmap_Update_Week1.md","title":"90_Day_Roadmap_Update_Week1","links":[],"tags":["roadmap","weekly"],"content":"90-Day Roadmap Update - Week 1\nCurrent Status: Foundation &amp; Audit Phase\nDate: 2025-09-16\nWeek: 1 of 12 (Day 2)\nPhase: Month 1 - Foundation &amp; Audit\ngraph LR\n  A[Week 1 Foundation] --&gt; B[Week 2 ECS Physics]\n  B --&gt; C[Week 3 Extraction + Cart]\n  C --&gt; D[Week 4 Safety Integration]\n\n\nWeekly Progress Summary\n‚úÖ Completed This Week\n\nUnity XR Toolkit Setup: Successfully configured XR Interaction Toolkit\nQuest 3 Development Environment: Established stable development pipeline\nDOTS Plan: Defined ECS migration targets and subscene workflow\nProject Documentation: Created comprehensive feature documentation system\nPublic Devlog Setup: Prepared YouTube content strategy and first script\n\nüéØ Focus Areas This Week\n\nImmersive Experience Design: Presence-first criteria\nECS Drill Foundation: Start converting drill interaction to Entities\nPerformance Optimization: Ensuring 72+ FPS on Quest 3\nUser Experience Research: Mining safety training requirements\n\n\nWeek-by-Week Breakdown\nWeek 1: Foundation &amp; Immersive Design\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFocusTasksDeliverableImmersion OverlapXR SetupUnity XR Toolkit configuration, Quest 3 setupWorking XR environmentEstablishing presence through proper setupDOTS PlanIdentify ECS targets, set up Entities packagesMigration planPerformance budget for immersionDrill FoundationECS authoring for drillDrill interaction prototypeRealistic tool feedbackDocumentationFeature and research docsComprehensive docsValidation framework\nWeek 2: Core Interaction Systems\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFocusTasksDeliverableImmersion OverlapPhysics (ECS)Entities Physics, weight, impactsPhysics-based drillAuthentic tool handlingHaptic FeedbackController vibration patternsTactile feedback systemEnhanced presenceAudio SystemSpatial audio implementation3D positioned soundEnvironmental immersionUI/UX DesignVR-appropriate interface designIntuitive VR interfaceComfortable UX\nWeek 3: Mining Mechanics\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFocusTasksDeliverableImmersion OverlapCoal ExtractionECS-based extraction mechanicsExtraction systemRealistic miningCart SystemECS transport mechanicsCart interaction systemWorkflow trainingEnvironmental DesignMine tunnel atmosphereImmersive environmentSpatial presencePerformance TestingQuest 3 optimizationOptimized performanceComfort\nWeek 4: Safety Integration\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFocusTasksDeliverableImmersion OverlapSafety GearHelmet and equipment enforcementSafety gear systemProtocol trainingHazard SimulationGas leak and collapse cuesHazard response trainingStress immersionEmergency ProceduresEvacuation protocol trainingEmergency response systemMuscle memoryStatus ReportMonth 1 progress documentationComprehensive status reportValidation\n\nNext Week‚Äôs Priorities\n\nAdvance ECS Drill System: Haptics and physics events\nImplement Spatial Audio: 3D positioned sound effects\nBegin Coal Extraction Mechanics (ECS)\nPrepare Week 2 Devlog: DOTS migration learnings\nUser Testing Setup: Initial feedback collection\n\n\nThis roadmap will be updated weekly to reflect actual progress and any necessary adjustments to the development timeline."},"Project_Directory_Index":{"slug":"Project_Directory_Index","filePath":"Project_Directory_Index.md","title":"Project_Directory_Index","links":["00_Home/INDEX","00_Home/Project_Dashboard","00_Home/Graph_Overview","00_Home/MOC_VR_Mines","90_Roadmap_Updates/90_Day_Master_Plan","70_Project_Documentation/DOTS_Migration_Plan","70_Project_Documentation/XR_to_DOTS_Bridge_Plan","70_Project_Documentation/GDD/VR_Mines_GDD","70_Project_Documentation/Design_Brief_Game_Design_Gamification","70_Project_Documentation/User_Flow_Storyline","70_Project_Documentation/VR_Coal_Mining_Simulator/INDEX","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog","70_Project_Documentation/VR_Coal_Mining_Simulator/Backlog.kanban","70_Project_Documentation/VR_Coal_Mining_Simulator/Features/Drill_System_DOTS","70_Project_Documentation/VR_Coal_Mining_Simulator/Systems_Analysis","70_Project_Documentation/VR_Coal_Mining_Simulator/External_Overview_Utilization","70_Project_Documentation/VR_Coal_Mining_Simulator/Overview_Condensed","70_Project_Documentation/VR_Coal_Mining_Simulator/DOTS_Migration_Runbook","70_Project_Documentation/VR_Coal_Mining_Simulator/Meetings/2025-09-11_Minutes","70_Project_Documentation/Code_Templates/INDEX","80_Research_Notes/INDEX","80_Research_Notes/Game_Design_Fundamentals_Bible","40_Daily/README","40_Daily/Weekly","40_Daily/Progress_Tracker","Publish/README"],"tags":["index"],"content":"Project Directory Index (Authoritative Links)\n\nThis index points to canonical documents; avoid duplicating content. Update links, not copies.\n\nHome\n\nHome Index ‚Ä¢ Dashboard ‚Ä¢ Graph Overview ‚Ä¢ MOC\n\nPlans &amp; Roadmaps\n\n90-Day Build + Post-90 Polish\nDOTS Migration Plan\nUnity XR ‚Üí DOTS Bridge Plan\n\nGDD &amp; Design\n\nGDD ‚Äî SafeOps\nDesign Brief: Game Design &amp; Gamification\nUser Flow + Storyline\n\nSimulator Docs\n\nSimulator Index\n\nBacklog ‚Ä¢ Kanban\nDrill System (DOTS)\nSystems Analysis\nExternal Overview Utilization\nOverview (Condensed)\nDOTS Migration Runbook\nMeetings: 2025-09-11\n\n\n\nCode Templates\n\nTemplates Index\n\nResearch\n\nResearch Index\n\nGame Design Fundamentals ‚Äî Bible\n\n\n\nDaily/Weekly\n\nDaily Logs ‚Ä¢ Weekly Notes ‚Ä¢ Progress Tracker\n\nPublish (Public Notes)\n\nPublish Index\n\nVisual Sitemap\ngraph TD\n  Home --&gt; Plans\n  Plans --&gt; GDD\n  GDD --&gt; Simulator\n  Simulator --&gt; Templates\n  Simulator --&gt; Research\n  Home --&gt; Daily\n  Home --&gt; Publish\n"},"Project_Structure":{"slug":"Project_Structure","filePath":"Project_Structure.md","title":"Project_Structure","links":[],"tags":[],"content":"XR Learning Project Structure\nRecommended Folder Organization\nLearning_XR/\n‚îú‚îÄ‚îÄ 01_Environment_Setup/\n‚îÇ   ‚îú‚îÄ‚îÄ Unity_Projects/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ XR_Setup_Test/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Quest3_Connection_Test/\n‚îÇ   ‚îú‚îÄ‚îÄ Documentation/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Setup_Notes.md\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Troubleshooting.md\n‚îÇ   ‚îî‚îÄ‚îÄ Resources/\n‚îÇ       ‚îú‚îÄ‚îÄ Unity_Packages/\n‚îÇ       ‚îî‚îÄ‚îÄ Quest3_APKs/\n‚îÇ\n‚îú‚îÄ‚îÄ 02_Beginner_Projects/\n‚îÇ   ‚îú‚îÄ‚îÄ Hello_XR/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Assets/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Builds/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ README.md\n‚îÇ   ‚îú‚îÄ‚îÄ VR_Gallery/\n‚îÇ   ‚îú‚îÄ‚îÄ Physics_Playground/\n‚îÇ   ‚îî‚îÄ‚îÄ Audio_Experience/\n‚îÇ\n‚îú‚îÄ‚îÄ 03_Intermediate_Projects/\n‚îÇ   ‚îú‚îÄ‚îÄ VR_Workshop/\n‚îÇ   ‚îú‚îÄ‚îÄ Puzzle_Room/\n‚îÇ   ‚îú‚îÄ‚îÄ Music_Visualizer/\n‚îÇ   ‚îî‚îÄ‚îÄ Mini_Game_Collection/\n‚îÇ\n‚îú‚îÄ‚îÄ 04_Advanced_Projects/\n‚îÇ   ‚îú‚îÄ‚îÄ AI_Companion/\n‚îÇ   ‚îú‚îÄ‚îÄ Procedural_World/\n‚îÇ   ‚îú‚îÄ‚îÄ Multiplayer_Social/\n‚îÇ   ‚îî‚îÄ‚îÄ Educational_Experience/\n‚îÇ\n‚îú‚îÄ‚îÄ 05_Production_Projects/\n‚îÇ   ‚îú‚îÄ‚îÄ Portfolio_Project/\n‚îÇ   ‚îú‚îÄ‚îÄ Commercial_App/\n‚îÇ   ‚îî‚îÄ‚îÄ Open_Source_Contribution/\n‚îÇ\n‚îú‚îÄ‚îÄ Resources/\n‚îÇ   ‚îú‚îÄ‚îÄ Scripts/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Interaction/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ UI/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Audio/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ AI/\n‚îÇ   ‚îú‚îÄ‚îÄ Prefabs/\n‚îÇ   ‚îú‚îÄ‚îÄ Materials/\n‚îÇ   ‚îú‚îÄ‚îÄ Audio/\n‚îÇ   ‚îî‚îÄ‚îÄ Models/\n‚îÇ\n‚îú‚îÄ‚îÄ Documentation/\n‚îÇ   ‚îú‚îÄ‚îÄ Learning_Notes/\n‚îÇ   ‚îú‚îÄ‚îÄ Code_Snippets/\n‚îÇ   ‚îú‚îÄ‚îÄ Performance_Notes/\n‚îÇ   ‚îî‚îÄ‚îÄ Deployment_Logs/\n‚îÇ\n‚îú‚îÄ‚îÄ 60_Devlog_Content/\n‚îÇ   ‚îú‚îÄ‚îÄ YouTube_Scripts/\n‚îÇ   ‚îú‚îÄ‚îÄ Livestream_Notes/\n‚îÇ   ‚îú‚îÄ‚îÄ Social_Media_Content/\n‚îÇ   ‚îî‚îÄ‚îÄ Video_Assets/\n‚îÇ\n‚îú‚îÄ‚îÄ 70_Project_Documentation/\n‚îÇ   ‚îú‚îÄ‚îÄ VR_Coal_Mining_Simulator/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Features/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ Technical_Specs/\n‚îÇ   ‚îÇ   ‚îú‚îÄ‚îÄ User_Stories/\n‚îÇ   ‚îÇ   ‚îî‚îÄ‚îÄ Testing_Protocols/\n‚îÇ   ‚îî‚îÄ‚îÄ Other_Projects/\n‚îÇ\n‚îú‚îÄ‚îÄ 80_Research_Notes/\n‚îÇ   ‚îú‚îÄ‚îÄ VR_Immersion_Research/\n‚îÇ   ‚îú‚îÄ‚îÄ Training_Effectiveness/\n‚îÇ   ‚îú‚îÄ‚îÄ Safety_Protocols/\n‚îÇ   ‚îî‚îÄ‚îÄ User_Experience_Studies/\n‚îÇ\n‚îî‚îÄ‚îÄ 90_Roadmap_Updates/\n    ‚îú‚îÄ‚îÄ Weekly_Updates/\n    ‚îú‚îÄ‚îÄ Monthly_Reviews/\n    ‚îú‚îÄ‚îÄ Milestone_Reports/\n    ‚îî‚îÄ‚îÄ Performance_Metrics/\n‚îÇ\n‚îî‚îÄ‚îÄ Tools/\n    ‚îú‚îÄ‚îÄ Build_Scripts/\n    ‚îú‚îÄ‚îÄ Performance_Tools/\n    ‚îî‚îÄ‚îÄ Testing_Utilities/\n\nProject Naming Conventions\nUnity Projects\n\nFormat: ProjectName_Version\nExamples:\n\nHello_XR_v1.0\nVR_Workshop_v2.1\nAI_Companion_v1.0\n\n\n\nScripts\n\nFormat: DescriptiveName.cs\nExamples:\n\nXRInteractionHandler.cs\nHandGestureRecognizer.cs\nAIConversationManager.cs\n\n\n\nPrefabs\n\nFormat: Type_DescriptiveName\nExamples:\n\nUI_RadialMenu\nInteractable_Door\nAI_CompanionCharacter\n\n\n\nScenes\n\nFormat: ProjectName_SceneName\nExamples:\n\nHello_XR_MainScene\nVR_Workshop_ToolSelection\nAI_Companion_Conversation\n\n\n\nVersion Control Strategy\nGit Repository Structure\nLearning_XR/\n‚îú‚îÄ‚îÄ .gitignore\n‚îú‚îÄ‚îÄ README.md\n‚îú‚îÄ‚îÄ .gitattributes\n‚îî‚îÄ‚îÄ Projects/\n    ‚îú‚îÄ‚îÄ 01_Environment_Setup/\n    ‚îú‚îÄ‚îÄ 02_Beginner_Projects/\n    ‚îú‚îÄ‚îÄ 03_Intermediate_Projects/\n    ‚îú‚îÄ‚îÄ 04_Advanced_Projects/\n    ‚îî‚îÄ‚îÄ 05_Production_Projects/\n\n.gitignore for Unity XR Projects\n# Unity generated files\n[Ll]ibrary/\n[Tt]emp/\n[Oo]bj/\n[Bb]uild/\n[Bb]uilds/\n[Ll]ogs/\n[Uu]ser[Ss]ettings/\n \n# MemoryCaptures can get excessive in size\n[Mm]emoryCaptures/\n \n# Asset meta data should only be ignored when the corresponding asset is also ignored\n!/[Aa]ssets/**/*.meta\n \n# Uncomment this line if you wish to ignore the asset store tools plugin\n# /[Aa]ssets/AssetStoreTools*\n \n# Autogenerated Jetbrains Rider plugin\n/[Aa]ssets/Plugins/Editor/JetBrains*\n \n# Visual Studio cache directory\n.vs/\n \n# Gradle cache directory\n.gradle/\n \n# Autogenerated VS/MD/Consulo solution and project files\nExportedObj/\n.consulo/\n*.csproj\n*.unityproj\n*.sln\n*.suo\n*.tmp\n*.user\n*.userprefs\n*.pidb\n*.booproj\n*.svd\n*.pdb\n*.mdb\n*.opendb\n*.VC.db\n \n# Unity3D generated meta files\n*.pidb.meta\n*.pdb.meta\n*.mdb.meta\n \n# Unity3D generated file on crash reports\nsysinfo.txt\n \n# Builds\n*.apk\n*.aab\n*.ipa\n*.app\n \n# Crashlytics generated file\ncrashlytics-build.properties\n \n# Packed Addressables\n/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*\n \n# Temporary auto-generated Android Assets\n/[Aa]ssets/[Ss]treamingAssets/aa.meta\n/[Aa]ssets/[Ss]treamingAssets/aa/*\n \n# XR specific\n/[Aa]ssets/XR/\n/[Aa]ssets/Oculus/\n/[Aa]ssets/Meta/\nDevelopment Workflow\n1. Project Creation\n# Create new Unity project\nmkdir &quot;02_Beginner_Projects/Hello_XR&quot;\ncd &quot;02_Beginner_Projects/Hello_XR&quot;\n# Open Unity Hub and create new project\n2. Version Control Setup\n# Initialize git repository\ngit init\ngit add .gitignore\ngit commit -m &quot;Initial commit with .gitignore&quot;\n \n# Add project files\ngit add .\ngit commit -m &quot;Add Hello XR project files&quot;\n3. Development Cycle\n# Daily development\ngit add .\ngit commit -m &quot;Add hand tracking implementation&quot;\ngit push origin main\n \n# Feature development\ngit checkout -b feature/gesture-recognition\n# ... develop feature ...\ngit add .\ngit commit -m &quot;Implement gesture recognition system&quot;\ngit push origin feature/gesture-recognition\nAsset Organization\nScripts Folder Structure\nScripts/\n‚îú‚îÄ‚îÄ Core/\n‚îÇ   ‚îú‚îÄ‚îÄ XRManager.cs\n‚îÇ   ‚îú‚îÄ‚îÄ GameManager.cs\n‚îÇ   ‚îî‚îÄ‚îÄ SceneManager.cs\n‚îú‚îÄ‚îÄ Interaction/\n‚îÇ   ‚îú‚îÄ‚îÄ XRInteractionHandler.cs\n‚îÇ   ‚îú‚îÄ‚îÄ HandGestureRecognizer.cs\n‚îÇ   ‚îî‚îÄ‚îÄ ObjectGrabber.cs\n‚îú‚îÄ‚îÄ UI/\n‚îÇ   ‚îú‚îÄ‚îÄ VRMenuSystem.cs\n‚îÇ   ‚îú‚îÄ‚îÄ RadialMenu.cs\n‚îÇ   ‚îî‚îÄ‚îÄ UIFollowCamera.cs\n‚îú‚îÄ‚îÄ Audio/\n‚îÇ   ‚îú‚îÄ‚îÄ SpatialAudioManager.cs\n‚îÇ   ‚îú‚îÄ‚îÄ AudioAnalyzer.cs\n‚îÇ   ‚îî‚îÄ‚îÄ VoiceRecognition.cs\n‚îú‚îÄ‚îÄ AI/\n‚îÇ   ‚îú‚îÄ‚îÄ AIConversationManager.cs\n‚îÇ   ‚îú‚îÄ‚îÄ MLModelManager.cs\n‚îÇ   ‚îî‚îÄ‚îÄ ProceduralContentGenerator.cs\n‚îî‚îÄ‚îÄ Utilities/\n    ‚îú‚îÄ‚îÄ PerformanceMonitor.cs\n    ‚îú‚îÄ‚îÄ DebugLogger.cs\n    ‚îî‚îÄ‚îÄ BuildOptimizer.cs\n\nPrefabs Organization\nPrefabs/\n‚îú‚îÄ‚îÄ XR/\n‚îÇ   ‚îú‚îÄ‚îÄ XR_Origin.prefab\n‚îÇ   ‚îú‚îÄ‚îÄ Hand_Controller.prefab\n‚îÇ   ‚îî‚îÄ‚îÄ Teleportation_Area.prefab\n‚îú‚îÄ‚îÄ UI/\n‚îÇ   ‚îú‚îÄ‚îÄ UI_RadialMenu.prefab\n‚îÇ   ‚îú‚îÄ‚îÄ UI_WorldSpaceCanvas.prefab\n‚îÇ   ‚îî‚îÄ‚îÄ UI_InteractionPrompt.prefab\n‚îú‚îÄ‚îÄ Interactables/\n‚îÇ   ‚îú‚îÄ‚îÄ Interactable_Door.prefab\n‚îÇ   ‚îú‚îÄ‚îÄ Interactable_Button.prefab\n‚îÇ   ‚îî‚îÄ‚îÄ Interactable_Grabbable.prefab\n‚îî‚îÄ‚îÄ AI/\n    ‚îú‚îÄ‚îÄ AI_Companion.prefab\n    ‚îú‚îÄ‚îÄ AI_NPC.prefab\n    ‚îî‚îÄ‚îÄ AI_ConversationUI.prefab\n\nDocumentation Standards\nCode Documentation\n/// &lt;summary&gt;\n/// Handles XR interaction events and manages object grabbing mechanics.\n/// Supports both hand tracking and controller input methods.\n/// &lt;/summary&gt;\npublic class XRInteractionHandler : MonoBehaviour\n{\n    /// &lt;summary&gt;\n    /// Maximum distance for interaction in meters.\n    /// &lt;/summary&gt;\n    [SerializeField] private float interactionDistance = 0.1f;\n    \n    /// &lt;summary&gt;\n    /// Called when an object is successfully grabbed.\n    /// &lt;/summary&gt;\n    /// &lt;param name=&quot;grabbedObject&quot;&gt;The object that was grabbed&lt;/param&gt;\n    public void OnObjectGrabbed(GameObject grabbedObject)\n    {\n        // Implementation\n    }\n}\nProject Documentation\nEach project should include:\n\nREADME.md: Project overview and setup instructions\nCHANGELOG.md: Version history and changes\nCONTRIBUTING.md: Guidelines for contributions\nLICENSE: Project license information\n\nLearning Notes\nDocumentation/\n‚îú‚îÄ‚îÄ Learning_Notes/\n‚îÇ   ‚îú‚îÄ‚îÄ Week1_HandTracking.md\n‚îÇ   ‚îú‚îÄ‚îÄ Week2_Teleportation.md\n‚îÇ   ‚îî‚îÄ‚îÄ Week3_PhysicsInteractions.md\n‚îú‚îÄ‚îÄ Code_Snippets/\n‚îÇ   ‚îú‚îÄ‚îÄ HandTracking_Examples.cs\n‚îÇ   ‚îú‚îÄ‚îÄ UI_Interaction_Patterns.cs\n‚îÇ   ‚îî‚îÄ‚îÄ AI_Integration_Examples.cs\n‚îî‚îÄ‚îÄ Performance_Notes/\n    ‚îú‚îÄ‚îÄ Quest3_Optimization.md\n    ‚îú‚îÄ‚îÄ Memory_Management.md\n    ‚îî‚îÄ‚îÄ Rendering_Optimization.md\n\nBuild and Deployment\nBuild Scripts\nTools/\n‚îú‚îÄ‚îÄ Build_Scripts/\n‚îÇ   ‚îú‚îÄ‚îÄ BuildQuest3.bat\n‚îÇ   ‚îú‚îÄ‚îÄ BuildQuest3.sh\n‚îÇ   ‚îî‚îÄ‚îÄ DeployToDevice.bat\n‚îú‚îÄ‚îÄ Performance_Tools/\n‚îÇ   ‚îú‚îÄ‚îÄ PerformanceProfiler.cs\n‚îÇ   ‚îú‚îÄ‚îÄ MemoryAnalyzer.cs\n‚îÇ   ‚îî‚îÄ‚îÄ FrameRateMonitor.cs\n‚îî‚îÄ‚îÄ Testing_Utilities/\n    ‚îú‚îÄ‚îÄ AutomatedTester.cs\n    ‚îú‚îÄ‚îÄ ComfortTester.cs\n    ‚îî‚îÄ‚îÄ PerformanceTester.cs\n\nBuild Configuration\n// BuildConfiguration.cs\n[CreateAssetMenu(fileName = &quot;BuildConfig&quot;, menuName = &quot;XR/Build Configuration&quot;)]\npublic class BuildConfiguration : ScriptableObject\n{\n    [Header(&quot;Quest 3 Settings&quot;)]\n    public string productName = &quot;XR Learning App&quot;;\n    public string packageName = &quot;com.yourname.xrlearning&quot;;\n    public int targetFrameRate = 72;\n    public bool enableFoveatedRendering = true;\n    \n    [Header(&quot;Build Settings&quot;)]\n    public BuildTarget buildTarget = BuildTarget.Android;\n    public AndroidArchitecture targetArchitecture = AndroidArchitecture.ARM64;\n    public ScriptingImplementation scriptingBackend = ScriptingImplementation.IL2CPP;\n}\nThis structure will help you stay organized as you progress through your XR learning journey. Each project builds upon the previous ones, and the documentation will help you track your progress and learnings!"},"Publish/Project_Directory_Index":{"slug":"Publish/Project_Directory_Index","filePath":"Publish/Project_Directory_Index.md","title":"Project_Directory_Index","links":["00_Home/MOC_VR_Mines","70_Project_Documentation/Design_Brief_Game_Design_Gamification","70_Project_Documentation/User_Flow_Storyline","70_Project_Documentation/DOTS_Migration_Plan","70_Project_Documentation/XR_to_DOTS_Bridge_Plan","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","80_Research_Notes/MDA_and_Game_Design_Principles_for_VR","80_Research_Notes/Gamification_Frameworks_Octalysis_Principles","80_Research_Notes/VR_Storytelling_and_Narrative_Design","README"],"tags":[],"content":"Project Directory Index (Public)\nSee the full index in the private vault. This public version links to shared notes only.\n\nMOC ‚Äî VR Mines\nDesign Brief\nUser Flow + Storyline\nDOTS Migration Plan\nXR ‚Üí DOTS Bridge Plan\nImmersion Factors\nMDA for VR\nGamification Frameworks\nVR Storytelling\nPublish Index\n"},"Publish/README":{"slug":"Publish/README","filePath":"Publish/README.md","title":"README","links":["60_Devlog_Content/YouTube_Devlog_Script_Week1","80_Research_Notes/VR_Immersion_Factors_Training_Simulations","70_Project_Documentation/DOTS_Migration_Plan"],"tags":[],"content":"Publish ‚Äî Public Notes\nThis folder contains public-facing notes for sharing without lab code.\nSections\n\nArticles: high-level writeups\nDevlogs: cleaned scripts and summaries\nResearch: non-sensitive summaries\n\nIndex\n\nDevlog Script Week 1 (clean)\nVR Immersion Factors\nDOTS Migration Overview\n"},"Publish/index":{"slug":"Publish/index","filePath":"Publish/index.md","title":"index","links":["Project_Directory_Index","00_Home/MOC_VR_Mines","70_Project_Documentation/User_Flow_Storyline"],"tags":[],"content":"VR Mines ‚Äî Public Notes\n\nVR Coal Mining Training Simulator ‚Äî Public Documentation\nAuthor: Prabhakar Deep Tirkey | Lab: DeSCINED Lab, IIT Delhi\n\nWelcome to the public view of the VR Mines project documentation. This site showcases the development journey of a VR-based mining safety training simulator built with Unity DOTS and optimized for Meta Quest 3.\nüöÄ Quick Start\n\nProject Directory Index ‚Äî Complete project overview\nMOC ‚Äî VR Mines ‚Äî Project mind map\nUser Flow + Storyline ‚Äî User experience design\n\nüì± Connect &amp; Follow\n\nEmail: thatguypdeep@gmail.com\nLinkedIn: @prabhakar-deep\nYouTube: @prabhakardeep ‚Äî Devlogs &amp; tutorials\nGitHub: @thatGuyPdeep ‚Äî Code repositories\n\nüéØ Project Goals\n\n90-day development ‚Üí Complete VR simulator with DOTS migration\nQuest 3 optimization ‚Üí 72-90 FPS performance target\nSafety training focus ‚Üí Immersive mining safety education\nPublic documentation ‚Üí Build-in-public learning journey\n"},"README":{"slug":"README","filePath":"README.md","title":"README","links":[],"tags":[],"content":"XR Learning Journey - Prabhakar Deep Tirkey\nüéØ Project Overview\nThis repository documents my 90-day journey learning XR development while building a VR Coal Mining Training Simulator for the DeSCINED Lab at IIT Delhi. The project combines technical development with public documentation through livestreams, devlogs, and comprehensive research.\nüßë‚Äçüíª About Me\nPrabhakar Deep Tirkey\n\nResearch Associate (RA, probation) at DeSCINED Lab, IIT Delhi\nB.Tech in IT &amp; Mathematics Innovation (University of Delhi)\nM.Sc in Cognitive Science (IIT Delhi)\nBackground in Game Design, VR/AR, AI/Automation, EEG/BCI research\n\nüé• Public Learning Journey\nI‚Äôm documenting this entire learning process through:\n\nWeekly YouTube Devlogs: ‚ÄúLearning XR in Public‚Äù series\nLivestreams: Real-time development sessions\nSocial Media: Progress updates and insights\nResearch Documentation: Comprehensive notes on VR immersion and training effectiveness\n\nüìÅ Project Structure\nCore Development\n\n01_Environment_Setup/: Unity XR setup, Quest 3 configuration\n02_Beginner_Projects/: Basic XR interactions and mechanics\n03_Intermediate_Projects/: Advanced features and systems\n04_Advanced_Projects/: AI integration and complex interactions\n05_Production_Projects/: Portfolio and commercial applications\n\nDocumentation &amp; Content\n\n60_Devlog_Content/: YouTube scripts, livestream notes, social media content\n70_Project_Documentation/: VR Coal Mining Simulator documentation\n80_Research_Notes/: VR immersion research, training effectiveness studies\n90_Roadmap_Updates/: Weekly progress updates and milestone reports\n\nResources\n\nResources/: Scripts, prefabs, materials, audio, models\nDocumentation/: Learning notes, code snippets, performance notes\nTools/: Build scripts, performance tools, testing utilities\n\nüéØ Current Focus: VR Coal Mining Training Simulator\nProject Goals\n\nPrimary: Run on Quest 3 with mobile-VR performance targets\nSecondary: Migrate critical systems from OOP MonoBehaviours to Unity DOTS/ECS\nTertiary: Build public learning journey through livestreams and devlogs\n\nKey Features\n\nECS Drill Interaction: Data-oriented drill control with haptics and spatial audio\nSafety Training: Hazard simulation and emergency response procedures\nEnvironmental Immersion: Authentic mine atmosphere and spatial audio\nPerformance Optimization: 72+ FPS on Quest 3 for comfortable training\n\nüìä 90-Day Roadmap\n[See 90_Roadmap_Updates/90_Day_Roadmap_Update_Week1.md]\nüõ†Ô∏è Technical Stack\nDevelopment Environment\n\nUnity 2023.3 LTS: Primary development platform\nXR Interaction Toolkit: Core XR functionality\nMeta XR SDK: Quest 3 specific features\nC#: Primary programming language\n\nHardware\n\nCPU: Intel i9 14th Gen\nGPU: RTX 5090\nHeadset: Meta Quest 3\nDisplay: 4K 120Hz\n\nPerformance Targets\n\nFrame Rate: 72+ FPS on Quest 3\nLatency: &lt;20ms interaction response\nMemory: &lt;4GB RAM usage\nComfort: Motion sickness prevention\n\nüìö Learning Resources\nOfficial Documentation\n\nUnity XR Toolkit Documentation\nMeta Quest Developer Hub\nUnity XR Learning Path\n\nKey Tutorials\n\nUnity Learn XR Pathway\nVR with Andrew (YouTube)\nMeta Quest Developer Forums\nUnity XR Toolkit Samples\n\nüé• Content Strategy\nYouTube Devlogs\n\nFrequency: Weekly (60-90 minutes)\nContent: Development progress, challenges, insights\nTone: Authentic, reflective, educational\nFocus: Immersive experience design, not just coding\n\nLivestreams\n\nPlatform: YouTube/Twitch\nSchedule: Weekly development sessions\nContent: Real-time coding, debugging, problem-solving\nInteraction: Q&amp;A with viewers, community feedback\n\nSocial Media\n\nTwitter/X: Daily progress updates, quick insights\nLinkedIn: Professional development, industry insights\nInstagram: Visual progress, behind-the-scenes content\n\nüî¨ Research Focus\nVR Immersion Factors\n\nPresence: Spatial, self, social, and environmental presence\nAttention: Selective, sustained, and divided attention in VR\nMemory: Episodic, procedural, and semantic memory formation\nLearning: Transfer effectiveness and retention rates\n\nTraining Applications\n\nMining Safety: Hazard recognition and emergency response\nEquipment Operation: Tool handling and procedure training\nSpatial Awareness: Navigation and orientation skills\nStress Inoculation: High-pressure scenario training\n\nüìà Success Metrics\nTechnical Performance\n\nFrame Rate: 72+ FPS on Quest 3\nLatency: &lt;20ms interaction response\nMemory: &lt;4GB RAM usage\nStability: &lt;1% crash rate\n\nUser Experience\n\nPresence Score: &gt;7/10 on presence questionnaires\nComfort Level: &gt;8/10 user comfort rating\nEngagement: &gt;90% task completion rate\nLearning Effectiveness: &gt;80% knowledge retention\n\nContent Engagement\n\nYouTube Views: Growing subscriber base\nCommunity Interaction: Active engagement in comments\nProfessional Recognition: Industry acknowledgment\nLearning Impact: Helping others learn XR development\n\nü§ù Community &amp; Collaboration\nOpen Source Contributions\n\nSharing reusable XR scripts and components\nContributing to Unity XR community\nOpen documentation and learning resources\n\nProfessional Network\n\nDeSCINED Lab collaboration\nIndustry connections through content\nAcademic research partnerships\n\nMentorship\n\nHelping other XR developers\nSharing knowledge through content\nBuilding inclusive XR community\n\nüìû Contact &amp; Links\n\nEmail: [Your Email]\nLinkedIn: [Your LinkedIn]\nTwitter/X: [Your Twitter]\nYouTube: [Your YouTube Channel]\nGitHub: [Your GitHub Profile]\n\nüìÑ License\nThis project is part of academic research at IIT Delhi. Please respect intellectual property rights and lab confidentiality requirements.\n\nThis README will be updated regularly to reflect project progress and new developments."},"XR_Learning_Roadmap":{"slug":"XR_Learning_Roadmap","filePath":"XR_Learning_Roadmap.md","title":"XR_Learning_Roadmap","links":[],"tags":[],"content":"Unity XR Development Learning Roadmap\nYour Setup\n\nCPU: Intel i9 14th Gen\nGPU: RTX 5090 (Excellent for XR development!)\nDisplay: 4K 120Hz\nHeadset: Meta Quest 3\nExperience: Unity prototyping, 3D modeling, AI programming\n\nPhase 1: Foundation Setup (Week 1-2)\n1.1 Unity XR Toolkit Setup\n\nInstall Unity 2023.3 LTS (most stable for XR)\nInstall XR Plugin Management\nInstall Meta XR SDK\nConfigure Quest 3 for development\nSet up Android SDK and build tools\n\n1.2 Essential XR Concepts\n\nUnderstanding 6DOF (6 Degrees of Freedom)\nHand tracking vs controller input\nSpatial audio principles\nPerformance optimization for mobile VR\nComfort considerations (motion sickness prevention)\n\nPhase 2: Core XR Mechanics (Week 3-6)\n2.1 Basic Interactions\n\nHand Tracking: Direct manipulation of objects\nTeleportation: Comfortable locomotion system\nGrab &amp; Throw: Physics-based interactions\nUI in 3D Space: World-space and screen-space UI\n\n2.2 Essential Systems\n\nLocomotion: Teleportation, smooth movement, snap turning\nInput Systems: XR Input System, hand gestures\nSpatial Audio: 3D positioned audio sources\nHaptic Feedback: Controller vibration patterns\n\nPhase 3: Intermediate Features (Week 7-12)\n3.1 Advanced Interactions\n\nPhysics Interactions: Complex object manipulation\nMulti-hand Interactions: Two-handed object manipulation\nGesture Recognition: Custom hand gesture detection\nVoice Commands: Speech recognition integration\n\n3.2 Performance &amp; Optimization\n\nFoveated Rendering: Quest 3 specific optimizations\nLOD Systems: Level of detail for complex scenes\nOcclusion Culling: Optimize rendering performance\nMemory Management: Efficient asset loading/unloading\n\nPhase 4: Advanced Development (Week 13-20)\n4.1 AI Integration (Leverage your AI background!)\n\nAI NPCs: Intelligent virtual characters\nProcedural Content: AI-generated environments\nAdaptive Difficulty: AI-driven gameplay adjustment\nNatural Language Processing: Voice interaction with AI\n\n4.2 Multiplayer &amp; Social\n\nMultiplayer XR: Shared virtual spaces\nAvatar Systems: Customizable user representations\nSocial Interactions: Voice chat, gestures, presence\n\n4.3 Advanced Rendering\n\nCustom Shaders: Quest 3 specific optimizations\nPost-Processing: VR-appropriate effects\nDynamic Lighting: Real-time lighting systems\nParticle Systems: Immersive environmental effects\n\nPhase 5: Production &amp; Deployment (Week 21-24)\n5.1 Testing &amp; Quality Assurance\n\nPerformance Profiling: Frame rate analysis\nComfort Testing: User experience validation\nAccessibility: Inclusive design principles\nCross-platform Testing: Quest 2/3 compatibility\n\n5.2 Publishing\n\nMeta Quest Store: Submission process\nApp Lab: Alternative distribution\nSideQuest: Developer testing platform\nMarketing: XR app promotion strategies\n\nRecommended Learning Resources\nOfficial Documentation\n\nUnity XR Toolkit Documentation\nMeta Quest Developer Hub\nUnity XR Learning Path\n\nKey Tutorials &amp; Courses\n\nUnity Learn XR Pathway - Official Unity XR curriculum\nVR with Andrew - YouTube channel for practical tutorials\nMeta Quest Developer Forums - Community support\nUnity XR Toolkit Samples - Official example projects\n\nEssential Tools\n\nUnity XR Interaction Toolkit - Core XR functionality\nMeta XR SDK - Quest-specific features\nOculus Integration - Legacy but still useful\nProBuilder - 3D modeling within Unity\nVisual Scripting - Node-based programming (great for prototyping)\n\nProject Progression Strategy\nBeginner Projects (Weeks 3-6)\n\nHello XR: Basic hand tracking and object grabbing\nVR Gallery: Teleportation and UI interaction\nPhysics Playground: Grab, throw, and physics interactions\nAudio Experience: Spatial audio demonstration\n\nIntermediate Projects (Weeks 7-12)\n\nVR Workshop: Multi-tool interaction system\nPuzzle Room: Complex problem-solving in VR\nMusic Visualizer: Real-time audio visualization\nMini-Game Collection: Multiple interaction types\n\nAdvanced Projects (Weeks 13-20)\n\nAI Companion: Virtual AI assistant with natural language\nProcedural World: AI-generated environments\nMultiplayer Social Space: Shared virtual environment\nEducational Experience: Interactive learning application\n\nPortfolio Projects (Weeks 21-24)\n\nComplete XR Game: Full-featured VR experience\nUtility App: Practical VR application\nArt Installation: Creative/experimental piece\nCommercial Product: Market-ready application\n\nPerformance Targets for Quest 3\nFrame Rate\n\nTarget: 72 FPS (Quest 3 native)\nMinimum: 60 FPS\nUse: Unity Profiler and Oculus Performance HUD\n\nResolution\n\nRecommended: 1.0x render scale (2160x1200 per eye)\nYour advantage: RTX 5090 can handle higher render scales for testing\n\nMemory\n\nTarget: &lt; 4GB RAM usage\nTexture streaming: Use Unity‚Äôs Addressable Asset System\n\nNext Steps\n\nSet up development environment (this week)\nComplete Unity XR Toolkit tutorial (week 1-2)\nBuild your first VR scene (week 2)\nStart with hand tracking basics (week 3)\n\nYour hardware setup is excellent for XR development - you‚Äôll be able to test at high fidelity and have plenty of headroom for complex scenes. The RTX 5090 will handle any rendering challenges you throw at it!\nReady to start? Let‚Äôs begin with setting up your development environment!"}}